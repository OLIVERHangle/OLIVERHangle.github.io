<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SQL理论课-Class 2</title>
      <link href="/posts/SQL2.html"/>
      <url>/posts/SQL2.html</url>
      
        <content type="html"><![CDATA[<h1 id="Class-2-新课"><a href="#Class-2-新课" class="headerlink" title="Class_2 新课"></a>Class_2 新课</h1><h2 id="多表查询-从多个表里面查询信息"><a href="#多表查询-从多个表里面查询信息" class="headerlink" title="多表查询 - 从多个表里面查询信息"></a>多表查询 - 从多个表里面查询信息</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">语法：<span class="token keyword">select</span> 需要的属性<span class="token keyword">from</span> 表<span class="token number">1</span>，表<span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="输出是表1和表2的笛卡尔积，结果没有意义。因为我们想要的是信息能对得上的。"><a href="#输出是表1和表2的笛卡尔积，结果没有意义。因为我们想要的是信息能对得上的。" class="headerlink" title="-输出是表1和表2的笛卡尔积，结果没有意义。因为我们想要的是信息能对得上的。"></a>-输出是表1和表2的笛卡尔积，结果没有意义。因为我们想要的是信息能对得上的。</h3><h3 id="需要使用where进行限定。"><a href="#需要使用where进行限定。" class="headerlink" title="-需要使用where进行限定。"></a>-需要使用where进行限定。</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">where</span> 表<span class="token number">1.</span>属性 <span class="token operator">=</span> 表<span class="token number">2.</span>属性（这里面的属性需要在两个表里面都一样）（这里的 表<span class="token number">1.</span>和 表<span class="token number">2.</span>不能省略。）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="表的连接：把两个及以上的表连接在一起"><a href="#表的连接：把两个及以上的表连接在一起" class="headerlink" title="表的连接：把两个及以上的表连接在一起"></a>表的连接：把两个及以上的表连接在一起</h2><h3 id="前提条件：有相同的属性（比如玉兰卡id和学号），当然可以有不同的属性。"><a href="#前提条件：有相同的属性（比如玉兰卡id和学号），当然可以有不同的属性。" class="headerlink" title="前提条件：有相同的属性（比如玉兰卡id和学号），当然可以有不同的属性。"></a>前提条件：有相同的属性（比如玉兰卡id和学号），当然可以有不同的属性。</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> dept_name <span class="token keyword">from</span> course<span class="token punctuation">,</span>section<span class="token keyword">where</span> course<span class="token punctuation">.</span>course_id <span class="token operator">=</span> section<span class="token punctuation">.</span>course_id <span class="token operator">and</span> dept_name <span class="token operator">=</span> <span class="token string">'Comp.Sci'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span><span class="token keyword">from</span> 表<span class="token number">1</span> <span class="token keyword">join</span> 表<span class="token number">2</span> <span class="token keyword">on</span> 表<span class="token number">1.</span>属性 <span class="token operator">=</span> 表<span class="token number">2.</span>属性还可以写成这样。效率比较高<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="如果想要把三个以上的表连接："><a href="#如果想要把三个以上的表连接：" class="headerlink" title="如果想要把三个以上的表连接："></a>如果想要把三个以上的表连接：</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">Select</span> <span class="token operator">*</span><span class="token keyword">From</span> emp <span class="token keyword">join</span> dept <span class="token keyword">on</span> emp<span class="token punctuation">.</span>dpetno <span class="token operator">=</span> dept<span class="token punctuation">.</span>deptno<span class="token keyword">Where</span> loc <span class="token operator">=</span> <span class="token string">'new York'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="自然连接：每一个相同属性列仅留下一个拷贝。也就是连接属性（比如两个表里面的id）只会留一个，"><a href="#自然连接：每一个相同属性列仅留下一个拷贝。也就是连接属性（比如两个表里面的id）只会留一个，" class="headerlink" title="自然连接：每一个相同属性列仅留下一个拷贝。也就是连接属性（比如两个表里面的id）只会留一个，"></a>自然连接：每一个相同属性列仅留下一个拷贝。也就是连接属性（比如两个表里面的id）只会留一个，</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">from</span> 表<span class="token number">1</span> <span class="token keyword">natural</span> <span class="token keyword">join</span> 表<span class="token number">2</span> <span class="token keyword">on</span> 条件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="自然连接有危险，当连接多个表的时候，可能会出现目标数据查询损失。筛选过度。"><a href="#自然连接有危险，当连接多个表的时候，可能会出现目标数据查询损失。筛选过度。" class="headerlink" title="-自然连接有危险，当连接多个表的时候，可能会出现目标数据查询损失。筛选过度。"></a>-自然连接有危险，当连接多个表的时候，可能会出现目标数据查询损失。筛选过度。</h3><h3 id="自连接：自己和自己中的元素进行查询-关键在于更改名字"><a href="#自连接：自己和自己中的元素进行查询-关键在于更改名字" class="headerlink" title="自连接：自己和自己中的元素进行查询,关键在于更改名字"></a>自连接：自己和自己中的元素进行查询,关键在于更改名字</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token keyword">distinct</span> T<span class="token punctuation">.</span>name<span class="token keyword">from</span> instructor <span class="token keyword">as</span> T<span class="token punctuation">,</span>instructor <span class="token keyword">as</span> S<span class="token keyword">where</span> T<span class="token punctuation">.</span>salary <span class="token operator">&gt;</span> S<span class="token punctuation">.</span>salary <span class="token operator">and</span> S<span class="token punctuation">.</span>dept_name <span class="token operator">=</span> <span class="token string">'Comp.Sci.'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="集合运算："><a href="#集合运算：" class="headerlink" title="集合运算："></a>集合运算：</h2><h3 id="并集：union"><a href="#并集：union" class="headerlink" title="并集：union"></a>并集：union</h3><h3 id="交集：intersect"><a href="#交集：intersect" class="headerlink" title="交集：intersect"></a>交集：intersect</h3><h3 id="减法：except"><a href="#减法：except" class="headerlink" title="减法：except"></a>减法：except</h3><h4 id="前提：两个集合数据类型要一样"><a href="#前提：两个集合数据类型要一样" class="headerlink" title="前提：两个集合数据类型要一样"></a>前提：两个集合数据类型要一样</h4><h4 id="SQL的集合中没有重复元素，保留重复需要：union-all-intersect-all-和-except-all"><a href="#SQL的集合中没有重复元素，保留重复需要：union-all-intersect-all-和-except-all" class="headerlink" title="SQL的集合中没有重复元素，保留重复需要：union all,intersect all 和 except all"></a>SQL的集合中没有重复元素，保留重复需要：union all,intersect all 和 except all</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">语法：<span class="token keyword">select</span> 属性<span class="token number">1</span> <span class="token keyword">from</span> 表<span class="token number">1</span> <span class="token keyword">where</span> 条件<span class="token number">1</span>集合运算符<span class="token keyword">select</span> 属性<span class="token number">2</span> <span class="token keyword">from</span> 表<span class="token number">2</span> <span class="token keyword">where</span> 条件<span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="空值-NULL"><a href="#空值-NULL" class="headerlink" title="空值 NULL"></a>空值 NULL</h3><p>数值 + null, null &lt;&gt; null null = null 结果是 unknown<br>所以选择值是unknown的：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">where</span> 属性 <span class="token operator">is</span> <span class="token boolean">null</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意：空值参与排序。</p><p>unknown 和 true 的逻辑运算以及结果：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">OR</span>: <span class="token punctuation">(</span>unknown <span class="token operator">or</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>unknown <span class="token operator">or</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token operator">=</span> unknown<span class="token punctuation">(</span>unknown <span class="token operator">or</span> unknown<span class="token punctuation">)</span> <span class="token operator">=</span> unknown– <span class="token operator">AND</span>: <span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">and</span> unknown<span class="token punctuation">)</span> <span class="token operator">=</span> unknown<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">and</span> unknown<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token punctuation">(</span>unknown <span class="token operator">and</span> unknown<span class="token punctuation">)</span> <span class="token operator">=</span> unknown– <span class="token operator">NOT</span>: <span class="token punctuation">(</span><span class="token operator">not</span> unknown<span class="token punctuation">)</span> <span class="token operator">=</span> unknown– “P <span class="token operator">is</span> unknown” evaluates <span class="token keyword">to</span> <span class="token boolean">true</span> <span class="token keyword">if</span> predicate P evaluates <span class="token keyword">to</span> unknown<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>小练习：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">查询先修课的先修课的名字（自连接）<span class="token keyword">use</span> university<span class="token keyword">select</span> <span class="token keyword">distinct</span> P<span class="token punctuation">.</span>prereq_id<span class="token keyword">from</span> prereq <span class="token keyword">as</span> C<span class="token punctuation">,</span>prereq <span class="token keyword">as</span> P<span class="token keyword">where</span> C<span class="token punctuation">.</span>prereq_id <span class="token operator">=</span> P<span class="token punctuation">.</span>course_id查询两个工资相等的老师<span class="token keyword">select</span> <span class="token keyword">distinct</span> A<span class="token punctuation">.</span>name<span class="token punctuation">,</span>B<span class="token punctuation">.</span>name<span class="token keyword">from</span> instructor <span class="token keyword">as</span> A<span class="token punctuation">,</span>instructor <span class="token keyword">as</span> B<span class="token keyword">where</span> A<span class="token punctuation">.</span>salary <span class="token operator">=</span> B<span class="token punctuation">.</span>salary <span class="token operator">and</span> A<span class="token punctuation">.</span>name <span class="token operator">&lt;&gt;</span> B<span class="token punctuation">.</span>name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SQL学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 理论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL理论课-Note 1_Revision</title>
      <link href="/posts/SQL1.1.html"/>
      <url>/posts/SQL1.1.html</url>
      
        <content type="html"><![CDATA[<h1 id="Class-1-复习"><a href="#Class-1-复习" class="headerlink" title="Class_1 复习"></a>Class_1 复习</h1><p>-len（） 函数返回字符串长度</p><p>-补充：关于distinct：一个select语句只能有一个distinct。<br>-字符串输出：select，当里面有单引号的时候，单引号打成双引号，以免报错。</p><p>-between and 是闭区间</p><p>-where salary in (50000,60000) 这样写就是 salary = 50000 或者 salary = 60000</p><p>-not in 的话就是既不是50000又不是60000<br> -当想要把%当成普通字符串处理，写成%，\定义转义字符</p><h2 id="order-by-补充"><a href="#order-by-补充" class="headerlink" title="-order by 补充"></a>-order by 补充</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">-</span><span class="token keyword">order</span> <span class="token keyword">by</span> 默认升序<span class="token operator">-</span><span class="token keyword">order</span> <span class="token keyword">by</span> 属性<span class="token number">1</span>，属性<span class="token number">2</span>，先按照<span class="token number">1</span>排序，后按照<span class="token number">2</span>排序，属性可以不出现在该句<span class="token keyword">select</span>后。<span class="token operator">-</span>如果两个都想按照降序， <span class="token keyword">order</span> <span class="token keyword">by</span> 属性<span class="token number">1</span> <span class="token keyword">desc</span>，属性<span class="token number">2</span> <span class="token keyword">desc</span><span class="token operator">-</span><span class="token keyword">order</span> <span class="token keyword">by</span> 聚集函数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="order-by-数字：按照-表里面的第（数字）列的属性-进行排序"><a href="#order-by-数字：按照-表里面的第（数字）列的属性-进行排序" class="headerlink" title="-order by 数字：按照 表里面的第（数字）列的属性 进行排序"></a>-order by 数字：按照 表里面的第（数字）列的属性 进行排序</h3><h3 id="order-by-3-4-按照第3，4列排序"><a href="#order-by-3-4-按照第3，4列排序" class="headerlink" title="-order by 3,4 按照第3，4列排序"></a>-order by 3,4 按照第3，4列排序</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> name<span class="token punctuation">,</span>salary<span class="token operator">*</span><span class="token number">1.1</span> news<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'DUT'</span><span class="token punctuation">,</span><span class="token function">len</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token keyword">from</span> instructor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">Select</span> <span class="token keyword">distinct</span> ID<span class="token keyword">from</span> instructor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> upper <span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token string">'It''s right'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> name <span class="token punctuation">,</span>salary<span class="token punctuation">,</span>ID<span class="token punctuation">,</span>dept_name<span class="token keyword">from</span> instructor<span class="token keyword">where</span> dept_name <span class="token operator">like</span> <span class="token string">'p2%'</span> <span class="token keyword">escape</span> <span class="token string">'2'</span><span class="token keyword">where</span> salary <span class="token operator">not</span> <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">50000</span><span class="token punctuation">,</span><span class="token number">60000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> instructor<span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> a<span class="token punctuation">.</span>course_id<span class="token punctuation">,</span>b<span class="token punctuation">.</span>prereq_id<span class="token keyword">from</span> prereq a<span class="token punctuation">,</span>prereq b<span class="token keyword">where</span> a<span class="token punctuation">.</span>prereq_id<span class="token operator">=</span>b<span class="token punctuation">.</span>course_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> instructor a<span class="token punctuation">,</span>instructor b<span class="token keyword">where</span> a<span class="token punctuation">.</span>salary<span class="token operator">=</span>b<span class="token punctuation">.</span>salary <span class="token operator">and</span> a<span class="token punctuation">.</span>name<span class="token operator">&lt;&gt;</span>b<span class="token punctuation">.</span>name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SQL学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 理论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库演习-Class2</title>
      <link href="/posts/SQL_2.html"/>
      <url>/posts/SQL_2.html</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#写SQL习惯注意：</span><span class="token comment"># 语法问题：</span><span class="token comment"># 1.执行语句后面用分号;</span><span class="token comment"># 2.设置主键外键的限制语句：用反引号！</span><span class="token comment"># 3.表最后一个设定没有符号</span><span class="token comment">##1.1创建数据库</span><span class="token keyword">drop</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> dlut002<span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> dlut002<span class="token punctuation">;</span><span class="token comment">#原则1：语句不能依赖上下文，这样有就删除再创建，没有就创建。</span><span class="token comment">#使用数据库,后面的操作都在该数据库里面运行：</span><span class="token keyword">use</span> dlut002 <span class="token punctuation">;</span><span class="token comment">#创建表：，，，，</span><span class="token comment">#原则2：删除时先删除外键所在的表中该元素，再删除主键所在表，</span><span class="token comment">#下面例子中要删除学生，先删除映射表中的学号，再删除主键（学生）中的学号</span><span class="token comment">#首先认识数据之间的关系：</span><span class="token comment"># 学号-学生--玉兰卡-卡号    玉兰卡的学号是外码，学生的学号是主码</span><span class="token comment"># ｜         ｜</span><span class="token comment"># ｜-映射表  学号</span><span class="token comment"># ｜</span><span class="token comment"># 教师--教工号，</span><span class="token comment"># ｜</span><span class="token comment"># 姓名</span><span class="token comment">#多对多的对应关系，比如学生对老师，老师对学生，在这个关系中间弄个中间表-叫映射表</span><span class="token comment">#在这个例子中，映射表三个属性：编号，学号，教工号</span><span class="token comment">#映射表里面挑的属性，主键和外键，主键独一无二区分（编号），学号教工号这样的叫外键</span><span class="token comment">#上面的关系：ER图，  实体：矩形  虚体：椭圆形</span><span class="token comment">#原则3：创建时先创建主键所在表</span><span class="token comment">#注意写表的语法，这样写才满足原则1。</span><span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> mapper<span class="token punctuation">;</span><span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> card<span class="token punctuation">;</span><span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> teacher<span class="token punctuation">;</span><span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> student<span class="token punctuation">;</span><span class="token comment">#满足原则1，2</span><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> student<span class="token punctuation">(</span>       sid <span class="token keyword">integer</span> <span class="token keyword">auto_increment</span> <span class="token keyword">comment</span> <span class="token string">'学号'</span><span class="token punctuation">,</span>       sname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">'姓名'</span><span class="token punctuation">,</span>       phone <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">unique</span> <span class="token keyword">comment</span> <span class="token string">'电话'</span><span class="token punctuation">,</span>       uptime <span class="token keyword">timestamp</span> <span class="token keyword">default</span> <span class="token keyword">current_timestamp</span> <span class="token keyword">on</span> <span class="token keyword">update</span> <span class="token keyword">current_timestamp</span> <span class="token keyword">comment</span> <span class="token string">'更新时间'</span><span class="token punctuation">,</span>    <span class="token comment">#current——timestamp，这个是当前时间戳，生成时插入系统时间,修改时再插入修改时的当时时间</span>                                      <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token identifier"><span class="token punctuation">`</span>s_pk<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>sid<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token comment">#主键设置放最后比较好，··是反向单引号，表示主键名字的！</span>    <span class="token comment">#设定主键后，编译器默认主键不能为空，可以为null。注意：主键还不能重复。</span><span class="token punctuation">)</span><span class="token keyword">comment</span> <span class="token string">'学生表'</span><span class="token punctuation">;</span><span class="token comment">#sid是行名字，当行号每多一行，自动增长sid。</span><span class="token comment">#数据表字段的设计：</span><span class="token comment">#1. 主键建议使用： 整数</span><span class="token comment">#2. 字段的约束【unique唯一，not null，default（默认值）】</span><span class="token comment">#3. '' 单引号表示字符串 ！ ··是反向单引号，表示主键名字的</span><span class="token comment"># create table if not exists teacher;</span><span class="token comment"># create table if not exists card;</span><span class="token comment"># create table if not exists mapper;</span><span class="token comment">#玉兰卡和学生一一对应，如何写约束关系？</span><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> card<span class="token punctuation">(</span>    cid <span class="token keyword">integer</span> <span class="token keyword">auto_increment</span> <span class="token keyword">comment</span> <span class="token string">'卡号'</span><span class="token punctuation">,</span>    cmoney <span class="token keyword">double</span> <span class="token keyword">default</span> <span class="token number">0.0</span> <span class="token keyword">comment</span> <span class="token string">'余额'</span><span class="token punctuation">,</span>    csid <span class="token keyword">integer</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">'学号'</span><span class="token punctuation">,</span>    <span class="token comment">#如果csid写成sid，会导致查询sid时查询到两个表中的sid，产生歧义。这个是区分。</span>    uptime <span class="token keyword">timestamp</span> <span class="token keyword">default</span> <span class="token keyword">current_timestamp</span> <span class="token keyword">on</span> <span class="token keyword">update</span> <span class="token keyword">current_timestamp</span><span class="token punctuation">,</span>    <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token identifier"><span class="token punctuation">`</span>c_pk<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>cid<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">#约束条件在这里：</span>    <span class="token keyword">constraint</span> <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token identifier"><span class="token punctuation">`</span>c_to_s_fk<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>csid<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">references</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>sid<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">comment</span> <span class="token string">'玉兰卡'</span><span class="token punctuation">;</span><span class="token comment">#删除记录：</span><span class="token comment"># delete from card where cid =2;</span><span class="token comment"># delete from card;#抹空数据</span><span class="token comment"># truncate card;#截断，抹空数据把自动增长的计数器也抹空</span><span class="token comment">#构建教师表</span><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span>  teacher<span class="token punctuation">(</span>    tid <span class="token keyword">integer</span> <span class="token keyword">auto_increment</span> <span class="token keyword">comment</span> <span class="token string">'教工号'</span><span class="token punctuation">,</span>    tname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">'姓名'</span><span class="token punctuation">,</span>    salary <span class="token keyword">double</span> <span class="token keyword">default</span> <span class="token number">0.0</span> <span class="token keyword">comment</span> <span class="token string">'薪水'</span><span class="token punctuation">,</span>    uptime <span class="token keyword">timestamp</span> <span class="token keyword">default</span> <span class="token keyword">current_timestamp</span> <span class="token keyword">on</span> <span class="token keyword">update</span> <span class="token keyword">current_timestamp</span> <span class="token keyword">comment</span> <span class="token string">'更新时间'</span><span class="token punctuation">,</span>    <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token identifier"><span class="token punctuation">`</span>t_pk<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>tid<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">comment</span> <span class="token string">'教师表'</span><span class="token punctuation">;</span><span class="token comment">#构建映射表</span><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> mapper<span class="token punctuation">(</span>    mid <span class="token keyword">integer</span> <span class="token keyword">auto_increment</span> <span class="token keyword">comment</span><span class="token string">'映射号'</span><span class="token punctuation">,</span>    msid <span class="token keyword">integer</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span><span class="token string">'学号'</span><span class="token punctuation">,</span>    mtid <span class="token keyword">integer</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span><span class="token string">'教工号'</span><span class="token punctuation">,</span>    uptime <span class="token keyword">timestamp</span> <span class="token keyword">default</span> <span class="token keyword">current_timestamp</span> <span class="token keyword">on</span> <span class="token keyword">update</span> <span class="token keyword">current_timestamp</span> <span class="token keyword">comment</span><span class="token string">'更新时间'</span><span class="token punctuation">,</span>    <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token identifier"><span class="token punctuation">`</span>m_pk<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>mid<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">constraint</span> <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token identifier"><span class="token punctuation">`</span>m_to_s_fk<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>msid<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">references</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>sid<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">constraint</span> <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token identifier"><span class="token punctuation">`</span>m_to_t_fk<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>mtid<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">references</span> <span class="token identifier"><span class="token punctuation">`</span>teacher<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>tid<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">comment</span> <span class="token string">'学生和教师映射表_多对多'</span><span class="token punctuation">;</span><span class="token comment">#查询</span><span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span><span class="token comment">#列出当前数据库中所有的表</span><span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">table</span> mapper<span class="token punctuation">;</span><span class="token comment">#查创建组间时的SQL语句</span><span class="token comment">#数据的操作</span><span class="token comment">#增删改查，应用程序猿 CRUD程序员</span><span class="token comment">#插入多行数据：：</span><span class="token keyword">insert</span> <span class="token keyword">into</span> student<span class="token punctuation">(</span>sname<span class="token punctuation">,</span> phone<span class="token punctuation">)</span> <span class="token keyword">value</span> <span class="token punctuation">(</span><span class="token string">'zs'</span><span class="token punctuation">,</span><span class="token string">'110'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'ls'</span><span class="token punctuation">,</span><span class="token string">'120'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'ww'</span><span class="token punctuation">,</span><span class="token string">'130'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#当要插入很大量数据，使用循环</span><span class="token comment"># 数据库里面的函数叫   存储过程</span><span class="token keyword">delimiter</span> $$<span class="token keyword">create</span> <span class="token keyword">procedure</span> sp_bs<span class="token punctuation">(</span><span class="token operator">IN</span> nums <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token comment">#声明储存过程这样写，注意形参的写法</span><span class="token keyword">BEGIN</span>    <span class="token keyword">declare</span> count <span class="token keyword">int</span> <span class="token keyword">default</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> count <span class="token operator">&lt;=</span> nums <span class="token keyword">do</span>        <span class="token keyword">insert</span> <span class="token keyword">into</span> student<span class="token punctuation">(</span>sname<span class="token punctuation">,</span>phone<span class="token punctuation">)</span>        <span class="token keyword">values</span> <span class="token punctuation">(</span>concat<span class="token punctuation">(</span><span class="token string">'stu'</span><span class="token punctuation">,</span>count<span class="token punctuation">)</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span>FLOOR<span class="token punctuation">(</span>rand<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">8999999999</span><span class="token operator">+</span><span class="token number">1000000000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#concat类似python的字符串f</span>        <span class="token keyword">set</span> count <span class="token operator">=</span> count <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">end</span> <span class="token keyword">while</span><span class="token punctuation">;</span><span class="token keyword">end</span>$$<span class="token keyword">delimiter</span> <span class="token punctuation">;</span><span class="token comment">#调用存储过程</span><span class="token keyword">call</span> sp_bs<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#记不住存储过程去查一下</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SQL学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 上机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库演习-Class1</title>
      <link href="/posts/SQL_1.html"/>
      <url>/posts/SQL_1.html</url>
      
        <content type="html"><![CDATA[<h1 id="数据库演习"><a href="#数据库演习" class="headerlink" title="数据库演习"></a>数据库演习</h1><h1 id="成绩构成：20-80，-20最多3次点名，80大作业"><a href="#成绩构成：20-80，-20最多3次点名，80大作业" class="headerlink" title="成绩构成：20+80， 20最多3次点名，80大作业"></a>成绩构成：20+80， 20最多3次点名，80大作业</h1><h2 id="推荐实现：MySQL-Java"><a href="#推荐实现：MySQL-Java" class="headerlink" title="推荐实现：MySQL + Java"></a>推荐实现：MySQL + Java</h2><h2 id="时间：-20：20"><a href="#时间：-20：20" class="headerlink" title="时间：   20：20"></a>时间：   20：20</h2><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><h2 id="结构化的数据存储方式。-sscanf-fprintf"><a href="#结构化的数据存储方式。-sscanf-fprintf" class="headerlink" title="结构化的数据存储方式。 sscanf,fprintf"></a>结构化的数据存储方式。 sscanf,fprintf</h2><h2 id="数据库类型：关系型，网状型。-文件型，内存型，服务型。"><a href="#数据库类型：关系型，网状型。-文件型，内存型，服务型。" class="headerlink" title="数据库类型：关系型，网状型。      文件型，内存型，服务型。"></a>数据库类型：关系型，网状型。      文件型，内存型，服务型。</h2><h2 id="MySQL：开源关系型数据库，典型的C-x2F-S结构，-【客户端-x2F-服务器】"><a href="#MySQL：开源关系型数据库，典型的C-x2F-S结构，-【客户端-x2F-服务器】" class="headerlink" title="MySQL：开源关系型数据库，典型的C/S结构，   【客户端/服务器】"></a>MySQL：开源关系型数据库，典型的C/S结构，   【客户端/服务器】</h2><h1 id="SQL基础"><a href="#SQL基础" class="headerlink" title="SQL基础"></a>SQL基础</h1><h2 id="Struct-Query-Language-结构化查询语句"><a href="#Struct-Query-Language-结构化查询语句" class="headerlink" title="Struct   Query    Language    结构化查询语句"></a>Struct   Query    Language    结构化查询语句</h2><h2 id="关系型数据库都支持SQL语句"><a href="#关系型数据库都支持SQL语句" class="headerlink" title="关系型数据库都支持SQL语句"></a>关系型数据库都支持SQL语句</h2><h2 id="SQL属于高级语言："><a href="#SQL属于高级语言：" class="headerlink" title="SQL属于高级语言："></a>SQL属于高级语言：</h2><h2 id="select-name-password-from-user-where-sno-x3D-110"><a href="#select-name-password-from-user-where-sno-x3D-110" class="headerlink" title="select name,password from user where sno=110"></a>select name,password from user where sno=110</h2><h2 id="增C删D改U查R"><a href="#增C删D改U查R" class="headerlink" title="增C删D改U查R"></a>增C删D改U查R</h2><h2 id="1数据库组件的增删改查【数据库database，表table，字段filed，主键primary-key，外键foreign-key】"><a href="#1数据库组件的增删改查【数据库database，表table，字段filed，主键primary-key，外键foreign-key】" class="headerlink" title="1数据库组件的增删改查【数据库database，表table，字段filed，主键primary key，外键foreign key】"></a>1数据库组件的增删改查【数据库database，表table，字段filed，主键primary key，外键foreign key】</h2><h2 id="1-1创建数据库-create-组件类型-组件名；"><a href="#1-1创建数据库-create-组件类型-组件名；" class="headerlink" title="1.1创建数据库       create [组件类型]   组件名；"></a>1.1创建数据库       create [组件类型]   组件名；</h2><h2 id="1-2删除drop-组件类型-组件名；"><a href="#1-2删除drop-组件类型-组件名；" class="headerlink" title="1.2删除drop  [组件类型]   组件名；"></a>1.2删除drop  [组件类型]   组件名；</h2><h2 id="1-3修改alter"><a href="#1-3修改alter" class="headerlink" title="1.3修改alter"></a>1.3修改alter</h2><h2 id="1-4查询show-databases；"><a href="#1-4查询show-databases；" class="headerlink" title="1.4查询show databases；"></a>1.4查询show databases；</h2><h2 id="1-5使用use-库名；"><a href="#1-5使用use-库名；" class="headerlink" title="1.5使用use  库名；"></a>1.5使用use  库名；</h2><h2 id="推荐使用-idea-作为开发平台"><a href="#推荐使用-idea-作为开发平台" class="headerlink" title="推荐使用        idea     作为开发平台"></a>推荐使用        idea     作为开发平台</h2><h1 id="https-www-jetbrains-com-idea"><a href="#https-www-jetbrains-com-idea" class="headerlink" title="https://www.jetbrains.com/idea/"></a><a href="https://www.jetbrains.com/idea/">https://www.jetbrains.com/idea/</a></h1>]]></content>
      
      
      <categories>
          
          <category> SQL学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 上机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL理论课-Class 1</title>
      <link href="/posts/SQL1.html"/>
      <url>/posts/SQL1.html</url>
      
        <content type="html"><![CDATA[<h1 id="SQL-Note-1："><a href="#SQL-Note-1：" class="headerlink" title="SQL-Note 1："></a>SQL-Note 1：</h1><h2 id="–查询语句："><a href="#–查询语句：" class="headerlink" title="–查询语句："></a>–查询语句：</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> name（一个或多个属性）<span class="token keyword">from</span> instructor（一个或者多个表）<span class="token keyword">where</span> dept_name <span class="token operator">=</span> <span class="token string">'cs'</span>（满足条件）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="练习：找到导师表中的系名"><a href="#练习：找到导师表中的系名" class="headerlink" title="练习：找到导师表中的系名"></a>练习：找到导师表中的系名</h3><p>select dept_name</p><p>from instructor</p><h3 id="找到表中所有属性："><a href="#找到表中所有属性：" class="headerlink" title="找到表中所有属性："></a>找到表中所有属性：</h3><p>select * –但是这个在计算机中处理效率没有一个个都列出来的效率高。</p><p>from instructor</p><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><p>select dept_name from instructor</p><p>当有多个导师属于一个系，</p><p>就会有<u><strong>重复</strong></u>。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--去重复：</span><span class="token keyword">select</span> <span class="token keyword">distinct</span> dept_name<span class="token keyword">from</span> instructor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token keyword">distinct</span> dept_name<span class="token punctuation">,</span>id<span class="token keyword">from</span> instructor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>–像这样去重复多个元素，去除的是满足这两个条件出来的 重复行</p><p>–注意：distinct前面没有属性，只能后面添加一个或者多个属性</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token keyword">distinct</span> 主码<span class="token keyword">from</span> 表<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>结果相当于没有distinct，但是效率会变低。</p><p><strong><u>– select中的属性可以进行操作，还可以是函数调用。但是不会修改数据库中数据</u></strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> salary<span class="token operator">*</span><span class="token number">1.1</span><span class="token keyword">from</span> instructor找导师工资出来，输出结果为<span class="token number">1.1</span>倍原工资数据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>--</p><h2 id="and-or-not-组成：复合条件-和-where-连用"><a href="#and-or-not-组成：复合条件-和-where-连用" class="headerlink" title="and or not 组成：复合条件 和 where 连用"></a>and or not 组成：复合条件 和 where 连用</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> salary<span class="token operator">&gt;</span><span class="token number">8000</span> <span class="token operator">and</span> dept_name <span class="token operator">=</span> <span class="token string">'cs'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="–用as起名字："><a href="#–用as起名字：" class="headerlink" title="–用as起名字："></a>–用as起名字：</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> salary<span class="token operator">*</span><span class="token number">1.1</span> <span class="token keyword">as</span> over_salary <span class="token keyword">from</span> instructor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="–字符串处理函数："><a href="#–字符串处理函数：" class="headerlink" title="–字符串处理函数："></a>–字符串处理函数：</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">字符串<span class="token number">1</span><span class="token operator">+</span>字符串<span class="token number">2</span> ：字符串拼接upper<span class="token punctuation">(</span>字符串<span class="token punctuation">)</span>lower<span class="token punctuation">(</span>字符串<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="–字符串匹配："><a href="#–字符串匹配：" class="headerlink" title="–字符串匹配："></a>–字符串匹配：</h2><pre class="line-numbers language-none"><code class="language-none">-'Intro%' --寻找开头为Intro-'%abc%'  --寻找中间含有abc-'___'   --寻找三位长度-'___%'  --寻找至少三位<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> name<span class="token keyword">from</span> instructor<span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">'%abc%'</span> <span class="token comment">--注意用like进行筛讯</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="定义转义字符"><a href="#定义转义字符" class="headerlink" title="\定义转义字符"></a>\定义转义字符</h3><h2 id="–数字区间条件：between-and："><a href="#–数字区间条件：between-and：" class="headerlink" title="–数字区间条件：between and："></a>–数字区间条件：between and：</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> name<span class="token keyword">from</span> instructor<span class="token keyword">where</span> salary <span class="token operator">between</span> <span class="token number">9000</span> <span class="token operator">and</span> <span class="token number">10000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="–多条件匹配"><a href="#–多条件匹配" class="headerlink" title="–多条件匹配"></a>–多条件匹配</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> name<span class="token punctuation">,</span> course_id<span class="token keyword">from</span> instructor<span class="token punctuation">,</span> teaches<span class="token keyword">where</span> <span class="token punctuation">(</span>instructor<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> dept_name<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span>teaches<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> ’Biology’<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="–排序：desc降序-asc升序"><a href="#–排序：desc降序-asc升序" class="headerlink" title="–排序：desc降序 asc升序"></a>–排序：desc降序 asc升序</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">– Example: <span class="token keyword">order</span> <span class="token keyword">by</span> name <span class="token keyword">desc</span>Can sort <span class="token keyword">on</span> multiple attributes– Example: <span class="token keyword">order</span> <span class="token keyword">by</span> dept_name<span class="token punctuation">,</span> name <span class="token comment">--按照两个元素排序，字符串首字母。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SQL学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 理论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习-Chapter7 用户输入和while循环</title>
      <link href="/posts/Python7.html"/>
      <url>/posts/Python7.html</url>
      
        <content type="html"><![CDATA[<h1 id="Chapter7-用户输入和while循环"><a href="#Chapter7-用户输入和while循环" class="headerlink" title="Chapter7 用户输入和while循环"></a>Chapter7 用户输入和while循环</h1><h2 id="7-1-input（）字符串输入"><a href="#7-1-input（）字符串输入" class="headerlink" title="7.1 input（）字符串输入"></a>7.1 input（）字符串输入</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">用户输入文本，把文本呈现给用户<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">message <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入返回的文本："</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>请输入返回的文本：1234512345</code></pre><h3 id="7-1-1-编写清晰的程序"><a href="#7-1-1-编写清晰的程序" class="headerlink" title="7.1.1 编写清晰的程序"></a>7.1.1 编写清晰的程序</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">原理：变量 <span class="token operator">=</span> <span class="token builtin">input</span>（参数 ：说明<span class="token operator">/</span>指示） <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"please enter your name:"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Hello,</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>please enter your name:OliverHello,Oliver</code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">echo <span class="token operator">=</span> <span class="token string">"语句1"</span><span class="token comment">#echo = echo + “语句2“ 可以写成：</span>echo <span class="token operator">+=</span> <span class="token string">"语句2"</span><span class="token keyword">print</span><span class="token punctuation">(</span>echo<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>语句1语句2</code></pre><h3 id="7-1-2-int-：将input（）变成int型进行运算"><a href="#7-1-2-int-：将input（）变成int型进行运算" class="headerlink" title="7.1.2 int()：将input（）变成int型进行运算"></a>7.1.2 int()：将input（）变成int型进行运算</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">age <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"What’s your age?:"</span><span class="token punctuation">)</span>age <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Your age is </span><span class="token interpolation"><span class="token punctuation">{</span>age<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>What’s your age?:65Your age is 65</code></pre><h3 id="7-1-3-求模运算符"><a href="#7-1-3-求模运算符" class="headerlink" title="7.1.3 求模运算符%"></a>7.1.3 求模运算符%</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">作用：将两个数相除并返回余数如果一个数可被另一个数字整除，<span class="token operator">%</span>返回值为<span class="token number">0</span>常见用途：判断奇数偶数。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token number">5</span><span class="token operator">%</span><span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>2</code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token number">6</span><span class="token operator">%</span><span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>0</code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token number">5</span><span class="token operator">%</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>0</code></pre><h2 id="7-2-while循环简介"><a href="#7-2-while循环简介" class="headerlink" title="7.2 while循环简介"></a>7.2 while循环简介</h2><h3 id="7-2-1-使用while循环"><a href="#7-2-1-使用while循环" class="headerlink" title="7.2.1 使用while循环"></a>7.2.1 使用while循环</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">语法<span class="token keyword">while</span> 条件：   <span class="token comment">#注意冒号！！！</span>  执行块 <span class="token comment">#注意缩进</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="7-2-2-设定退出值"><a href="#7-2-2-设定退出值" class="headerlink" title="7.2.2 设定退出值"></a>7.2.2 设定退出值</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#空字符串</span>messag <span class="token operator">=</span> <span class="token string">""</span><span class="token comment">#空列表</span>message <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment">#空字典</span>message <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">while</span> message <span class="token operator">!=</span> 设定值：  执行块<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="7-2-3-使用标志"><a href="#7-2-3-使用标志" class="headerlink" title="7.2.3 使用标志"></a>7.2.3 使用标志</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">标志本质上是一个： 变量用途：判断整个程序是否处于活动状态。当触发结束条件时，使标志 <span class="token operator">=</span> false<span class="token comment">#注意语法：</span><span class="token keyword">while</span> 标志：  执行块<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-2-4-Break：直接跳出循环"><a href="#7-2-4-Break：直接跳出循环" class="headerlink" title="7.2.4 Break：直接跳出循环"></a>7.2.4 Break：直接跳出循环</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">语法：<span class="token keyword">while</span> 循环条件：  执行块  <span class="token keyword">if</span> 跳出条件：     <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-2-5-Continue：直接返回开头"><a href="#7-2-5-Continue：直接返回开头" class="headerlink" title="7.2.5 Continue：直接返回开头"></a>7.2.5 Continue：直接返回开头</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">current_number <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> current_number <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">:</span>    current_number <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">if</span> current_number <span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>       <span class="token keyword">continue</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>current_number<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>13579</code></pre><h3 id="7-2-6-避免无限循环"><a href="#7-2-6-避免无限循环" class="headerlink" title="7.2.6 避免无限循环"></a>7.2.6 避免无限循环</h3><p>注意循环条件不能始终为true</p><h2 id="7-3-while处理循环列表和字典"><a href="#7-3-while处理循环列表和字典" class="headerlink" title="7.3 while处理循环列表和字典"></a>7.3 while处理循环列表和字典</h2><h3 id="7-3-1-在列表间移动元素"><a href="#7-3-1-在列表间移动元素" class="headerlink" title="7.3.1 在列表间移动元素"></a>7.3.1 在列表间移动元素</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#当列表为空时，while会认为它是false。</span>an <span class="token operator">=</span> <span class="token punctuation">[</span>元素<span class="token number">1</span>，元素<span class="token number">2</span>，元素<span class="token number">3</span>···<span class="token punctuation">]</span>bn <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">while</span> an<span class="token punctuation">:</span>    b <span class="token operator">=</span> an<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>    对b（an弹出元素的一些操作）    bn<span class="token punctuation">.</span>append<span class="token punctuation">(</span>b<span class="token punctuation">)</span>注意：bn中的顺序是an相反。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-3-2-while-remove-删除列表中-为某值的-所有元素"><a href="#7-3-2-while-remove-删除列表中-为某值的-所有元素" class="headerlink" title="7.3.2 while +  remove()删除列表中 为某值的 所有元素"></a>7.3.2 while +  remove()删除列表中 为某值的 所有元素</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#注意特殊语法：</span><span class="token keyword">while</span> 删除元素 <span class="token keyword">in</span> 列表<span class="token punctuation">:</span>    列表<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>删除元素<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-3-3-用户输入填充字典："><a href="#7-3-3-用户输入填充字典：" class="headerlink" title="7.3.3 用户输入填充字典："></a>7.3.3 用户输入填充字典：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#复习语法：</span>  字典插入新的键值对：  字典<span class="token punctuation">[</span>新增键<span class="token punctuation">]</span> <span class="token operator">=</span> 新增值新增值 <span class="token operator">=</span> <span class="token builtin">input</span>（“提示”）  字典<span class="token punctuation">[</span>新增键<span class="token punctuation">]</span> <span class="token operator">=</span> 新增值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 循环 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统-Note 1</title>
      <link href="/posts/OS_1.html"/>
      <url>/posts/OS_1.html</url>
      
        <content type="html"><![CDATA[<h4 id="Chapter3-进程"><a href="#Chapter3-进程" class="headerlink" title="Chapter3: 进程"></a>Chapter3: 进程</h4><p>pipes：单项的，双向通信：半双通信，发的时候不能输入，输入时候不能发送。</p><h1 id="Chapter4-线程"><a href="#Chapter4-线程" class="headerlink" title="Chapter4:线程"></a>Chapter4:线程</h1><p>进程间通信</p><p>多核编程</p><h2 id="1-并行"><a href="#1-并行" class="headerlink" title="1.并行"></a>1.并行</h2><p>数据并行：数据子集到多核，每个做相同工作</p><p>工作并行：线程到每个核，每个核心不同工作</p><h2 id="2-用户线程和内核线程"><a href="#2-用户线程和内核线程" class="headerlink" title="2.用户线程和内核线程"></a>2.用户线程和内核线程</h2><h3 id="用户线程："><a href="#用户线程：" class="headerlink" title="用户线程："></a>用户线程：</h3><p>POSIX Pthreads </p><p>Windows threads</p><p> Java threads</p><h3 id="内核线程："><a href="#内核线程：" class="headerlink" title="内核线程："></a>内核线程：</h3><p>Windows </p><p>Solaris</p><p>LinuxTru64 </p><p>UNIXMac OS X</p><p>操作系统：用户线程看不到，内核线程能看到</p><p>用户线程和内核线程对应：</p><p>一对一</p><p>多对一</p><p>多对多</p><h2 id="3-Pthreads："><a href="#3-Pthreads：" class="headerlink" title="3.Pthreads："></a>3.Pthreads：</h2><p>函数库</p><p>p</p>]]></content>
      
      
      <categories>
          
          <category> 操作系统学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习-Chapter6 字典</title>
      <link href="/posts/Python6.html"/>
      <url>/posts/Python6.html</url>
      
        <content type="html"><![CDATA[<h1 id="Chapter6-字典（类比结构体）"><a href="#Chapter6-字典（类比结构体）" class="headerlink" title="Chapter6: 字典（类比结构体）"></a>Chapter6: 字典（类比结构体）</h1><h2 id="6-1-一个简单的字典"><a href="#6-1-一个简单的字典" class="headerlink" title="6.1 一个简单的字典"></a>6.1 一个简单的字典</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">car <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'brand'</span><span class="token punctuation">:</span><span class="token string">'bwm'</span><span class="token punctuation">,</span><span class="token string">'price'</span><span class="token punctuation">:</span><span class="token number">1000000</span><span class="token punctuation">,</span><span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'black'</span><span class="token punctuation">}</span><span class="token keyword">print</span><span class="token punctuation">(</span>car<span class="token punctuation">[</span><span class="token string">'brand'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>car<span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>car<span class="token punctuation">[</span><span class="token string">'color'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>bwm1000000black</code></pre><h2 id="6-2-使用字典"><a href="#6-2-使用字典" class="headerlink" title="6.2 使用字典"></a>6.2 使用字典</h2><h3 id="6-2-1-定义与访问字典"><a href="#6-2-1-定义与访问字典" class="headerlink" title="6.2.1 定义与访问字典"></a>6.2.1 定义与访问字典</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">定义：字典名 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'键值1'</span><span class="token punctuation">:</span>键值<span class="token number">1</span>值<span class="token punctuation">,</span><span class="token string">'键值2'</span><span class="token punctuation">:</span>键值<span class="token number">2</span>值···<span class="token punctuation">}</span>访问：字典名<span class="token punctuation">[</span><span class="token string">'键值名'</span><span class="token punctuation">]</span><span class="token comment">#每一个键值都是一个变量，相当于成员</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-2-2-添加键值对"><a href="#6-2-2-添加键值对" class="headerlink" title="6.2.2 添加键值对"></a>6.2.2 添加键值对</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">字典<span class="token punctuation">[</span><span class="token string">'新增键值名'</span><span class="token punctuation">]</span> <span class="token operator">=</span> 新增键值的值<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">car <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'brand'</span><span class="token punctuation">:</span><span class="token string">'bwm'</span><span class="token punctuation">,</span><span class="token string">'price'</span><span class="token punctuation">:</span><span class="token number">1000000</span><span class="token punctuation">,</span><span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'black'</span><span class="token punctuation">}</span><span class="token keyword">print</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span class="token comment">#字典可以直接输出</span><span class="token comment">#新增型号</span>car<span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'x765'</span><span class="token keyword">print</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>{'brand': 'bwm', 'price': 1000000, 'color': 'black'}{'brand': 'bwm', 'price': 1000000, 'color': 'black', 'type': 'x765'}</code></pre><p>直接打印字典，元素排列顺序和定义时完全相同，用for循环遍历时也按照定义顺序。<br>新增键值对：会直接默认在最后。</p><h3 id="6-2-3-创建一个空字典："><a href="#6-2-3-创建一个空字典：" class="headerlink" title="6.2.3 创建一个空字典："></a>6.2.3 创建一个空字典：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">和创建一个空列表一样语法：字典名 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="6-2-4-修改字典中的值"><a href="#6-2-4-修改字典中的值" class="headerlink" title="6.2.4 修改字典中的值"></a>6.2.4 修改字典中的值</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">car <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'brand'</span><span class="token punctuation">:</span><span class="token string">'bwm'</span><span class="token punctuation">,</span><span class="token string">'price'</span><span class="token punctuation">:</span><span class="token number">1000000</span><span class="token punctuation">,</span><span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'black'</span><span class="token punctuation">}</span>car<span class="token punctuation">[</span><span class="token string">'color'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'white'</span><span class="token keyword">print</span><span class="token punctuation">(</span>car<span class="token punctuation">[</span><span class="token string">'color'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>white{'brand': 'bwm', 'price': 1000000, 'color': 'white'}</code></pre><h3 id="6-2-5-删除键值对：del"><a href="#6-2-5-删除键值对：del" class="headerlink" title="6.2.5 删除键值对：del"></a>6.2.5 删除键值对：del</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">del</span> 列表名<span class="token punctuation">[</span><span class="token string">'键值名'</span><span class="token punctuation">]</span> <span class="token comment">#键值名记着加引号！！！</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">car <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'brand'</span><span class="token punctuation">:</span><span class="token string">'bwm'</span><span class="token punctuation">,</span><span class="token string">'price'</span><span class="token punctuation">:</span><span class="token number">1000000</span><span class="token punctuation">,</span><span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'black'</span><span class="token punctuation">}</span><span class="token keyword">print</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span class="token keyword">del</span> car<span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>{'brand': 'bwm', 'price': 1000000, 'color': 'black'}{'brand': 'bwm', 'color': 'black'}</code></pre><h3 id="6-2-6-定义字典小习惯"><a href="#6-2-6-定义字典小习惯" class="headerlink" title="6.2.6 定义字典小习惯"></a>6.2.6 定义字典小习惯</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">car <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'brand'</span><span class="token punctuation">:</span><span class="token string">'bwm'</span><span class="token punctuation">,</span>       <span class="token string">'price'</span><span class="token punctuation">:</span><span class="token number">1000000</span><span class="token punctuation">,</span>       <span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'black'</span><span class="token punctuation">}</span><span class="token keyword">print</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span class="token comment">#竖着这样写可以让键值对更清晰</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>{'brand': 'bwm', 'price': 1000000, 'color': 'black'}</code></pre><h3 id="6-2-7-使用get-来访问值"><a href="#6-2-7-使用get-来访问值" class="headerlink" title="6.2.7 使用get()来访问值"></a>6.2.7 使用get()来访问值</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">car <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'brand'</span><span class="token punctuation">:</span><span class="token string">'bwm'</span><span class="token punctuation">,</span><span class="token string">'price'</span><span class="token punctuation">:</span><span class="token number">1000000</span><span class="token punctuation">,</span><span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'black'</span><span class="token punctuation">}</span><span class="token keyword">print</span><span class="token punctuation">(</span>car<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'brand'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>car<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'owner'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>bwmNone</code></pre><h2 id="6-3-遍历字典"><a href="#6-3-遍历字典" class="headerlink" title="6.3 遍历字典"></a>6.3 遍历字典</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">语法：<span class="token keyword">for</span> 键值变量an，键值值bn <span class="token keyword">in</span> 列表名<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    执行块    <span class="token comment">#注意！！！ 列表名.items()不可以省略。items!!!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">car <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'brand'</span><span class="token punctuation">:</span><span class="token string">'bwm'</span><span class="token punctuation">,</span><span class="token string">'price'</span><span class="token punctuation">:</span><span class="token number">1000000</span><span class="token punctuation">,</span><span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'black'</span><span class="token punctuation">}</span><span class="token keyword">for</span> key<span class="token punctuation">,</span>value <span class="token keyword">in</span> car<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\nKey: </span><span class="token interpolation"><span class="token punctuation">{</span>key<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\nValue: </span><span class="token interpolation"><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>Key: BrandValue: bwmKey: PriceValue: 1000000Key: ColorValue: black</code></pre><h3 id="6-3-2-遍历字典中的所有键名变量-或者-键值"><a href="#6-3-2-遍历字典中的所有键名变量-或者-键值" class="headerlink" title="6.3.2 遍历字典中的所有键名变量 或者 键值"></a>6.3.2 遍历字典中的所有键名变量 或者 键值</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> 键值变量an <span class="token keyword">in</span> 列表名<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    执行块    <span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span>是让前面的变量对应键值名变量。（访问以键值名构成的列表）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">car <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'brand'</span><span class="token punctuation">:</span><span class="token string">'bwm'</span><span class="token punctuation">,</span><span class="token string">'price'</span><span class="token punctuation">:</span><span class="token number">1000000</span><span class="token punctuation">,</span><span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'black'</span><span class="token punctuation">}</span><span class="token keyword">for</span> key <span class="token keyword">in</span> car<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\nKey: </span><span class="token interpolation"><span class="token punctuation">{</span>key<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>Key: BrandKey: PriceKey: Color</code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> 键值变量an <span class="token keyword">in</span> 列表名<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    执行块    <span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span>是让前面的变量对应键值。（访问以键值构成的列表）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">car <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'brand'</span><span class="token punctuation">:</span><span class="token string">'bwm'</span><span class="token punctuation">,</span><span class="token string">'price'</span><span class="token punctuation">:</span><span class="token number">1000000</span><span class="token punctuation">,</span><span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'black'</span><span class="token punctuation">}</span><span class="token keyword">for</span> value <span class="token keyword">in</span> car<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\nKey: </span><span class="token interpolation"><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>Key: bwmKey: 1000000Key: black</code></pre><h3 id="6-3-3-遍历处理后的列表"><a href="#6-3-3-遍历处理后的列表" class="headerlink" title="6.3.3 遍历处理后的列表"></a>6.3.3 遍历处理后的列表</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#想按照首字母排序 打印：键值名变量 用sorted（）临时排序</span>car <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'brand'</span><span class="token punctuation">:</span><span class="token string">'bwm'</span><span class="token punctuation">,</span><span class="token string">'price'</span><span class="token punctuation">:</span><span class="token number">1000000</span><span class="token punctuation">,</span><span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'black'</span><span class="token punctuation">}</span><span class="token keyword">for</span> key <span class="token keyword">in</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>car<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\nKey: </span><span class="token interpolation"><span class="token punctuation">{</span>key<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>Key: BrandKey: ColorKey: Price</code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">favo_language <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'jen'</span><span class="token punctuation">:</span> <span class="token string">'python'</span><span class="token punctuation">,</span>    <span class="token string">'sarah'</span><span class="token punctuation">:</span> <span class="token string">'c'</span><span class="token punctuation">,</span>    <span class="token string">'edward'</span><span class="token punctuation">:</span> <span class="token string">'ruby'</span><span class="token punctuation">,</span>    <span class="token string">'phil'</span><span class="token punctuation">:</span> <span class="token string">'python'</span><span class="token punctuation">}</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"The following languages have been mentioned:"</span><span class="token punctuation">)</span><span class="token keyword">for</span> language <span class="token keyword">in</span>  <span class="token builtin">set</span><span class="token punctuation">(</span>favo_language<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>language<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>The following languages have been mentioned:RubyCPython</code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#对列表去重处理： set(列表名)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6-4-嵌套（套娃）"><a href="#6-4-嵌套（套娃）" class="headerlink" title="6.4 嵌套（套娃）"></a>6.4 嵌套（套娃）</h2><h3 id="6-4-1-6-字典列表"><a href="#6-4-1-6-字典列表" class="headerlink" title="6.4.1 6.字典列表"></a>6.4.1 6.字典列表</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">car_1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'black'</span><span class="token punctuation">,</span><span class="token string">'price'</span><span class="token punctuation">:</span><span class="token number">3000</span><span class="token punctuation">}</span>car_2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'whilt'</span><span class="token punctuation">,</span><span class="token string">'price'</span><span class="token punctuation">:</span><span class="token number">34000</span><span class="token punctuation">}</span>car_3 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'yellow'</span><span class="token punctuation">,</span><span class="token string">'price'</span><span class="token punctuation">:</span><span class="token number">342000</span><span class="token punctuation">}</span>cars <span class="token operator">=</span> <span class="token punctuation">[</span>car_1<span class="token punctuation">,</span>car_2<span class="token punctuation">,</span>car_3<span class="token punctuation">]</span>  <span class="token comment">#注意这里列表用的是方括号</span><span class="token keyword">print</span><span class="token punctuation">(</span>cars<span class="token punctuation">)</span><span class="token keyword">for</span> car <span class="token keyword">in</span> cars<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>[{'color': 'black', 'price': 3000}, {'color': 'whilt', 'price': 34000}, {'color': 'yellow', 'price': 342000}]{'color': 'black', 'price': 3000}{'color': 'whilt', 'price': 34000}{'color': 'yellow', 'price': 342000}</code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#创建多个的时候可以使用for（） 和 range（）</span>aliens <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> alien_number <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    new_alien <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'speed'</span><span class="token punctuation">:</span><span class="token string">'slow'</span><span class="token punctuation">}</span>    aliens<span class="token punctuation">.</span>append<span class="token punctuation">(</span>new_alien<span class="token punctuation">)</span><span class="token keyword">for</span> alien_number <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    new_alien <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'yellow'</span><span class="token punctuation">,</span><span class="token string">'speed'</span><span class="token punctuation">:</span><span class="token string">'fast'</span><span class="token punctuation">}</span>    aliens<span class="token punctuation">.</span>append<span class="token punctuation">(</span>new_alien<span class="token punctuation">)</span><span class="token keyword">for</span> alien <span class="token keyword">in</span> aliens<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">30</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>alien<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>aliens<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>{'color': 'green', 'speed': 'slow'}{'color': 'yellow', 'speed': 'fast'}{'color': 'yellow', 'speed': 'fast'}{'color': 'yellow', 'speed': 'fast'}{'color': 'yellow', 'speed': 'fast'}{'color': 'yellow', 'speed': 'fast'}30</code></pre><h3 id="6-4-2-在字典中储存列表"><a href="#6-4-2-在字典中储存列表" class="headerlink" title="6.4.2 在字典中储存列表"></a>6.4.2 在字典中储存列表</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">pizza <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'crust'</span><span class="token punctuation">:</span><span class="token string">'thick'</span><span class="token punctuation">,</span>    <span class="token string">'toppings'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'mushrooms'</span><span class="token punctuation">,</span><span class="token string">'extra cheese'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token keyword">for</span> topping <span class="token keyword">in</span> pizza<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'toppings'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#也可以写成 pizza['toppingsb']</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>topping<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>mushroomsextra cheese</code></pre><h3 id="6-4-3-在字典中储存字典"><a href="#6-4-3-在字典中储存字典" class="headerlink" title="6.4.3 在字典中储存字典"></a>6.4.3 在字典中储存字典</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">pizza <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'toppings'</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">'first'</span><span class="token punctuation">:</span><span class="token string">'mushrooms'</span><span class="token punctuation">,</span><span class="token string">'second'</span><span class="token punctuation">:</span><span class="token string">'extra cheese'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">for</span> sequence<span class="token punctuation">,</span>topping <span class="token keyword">in</span> pizza<span class="token punctuation">[</span><span class="token string">'toppings'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>sequence<span class="token punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">{</span>topping<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>first: mushroomssecond: extra cheese</code></pre>]]></content>
      
      
      <categories>
          
          <category> Python学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习-Chapter5 if语句</title>
      <link href="/posts/Python5.html"/>
      <url>/posts/Python5.html</url>
      
        <content type="html"><![CDATA[<h1 id="今天是柴柴的生日！"><a href="#今天是柴柴的生日！" class="headerlink" title="今天是柴柴的生日！"></a>今天是柴柴的生日！</h1><h1 id="谢谢宝贝蛋的惊喜，开心心！阿狐姐姐辛苦啦❤️"><a href="#谢谢宝贝蛋的惊喜，开心心！阿狐姐姐辛苦啦❤️" class="headerlink" title="谢谢宝贝蛋的惊喜，开心心！阿狐姐姐辛苦啦❤️"></a>谢谢宝贝蛋的惊喜，开心心！阿狐姐姐辛苦啦❤️</h1><h1 id="Chapter-5-if语句"><a href="#Chapter-5-if语句" class="headerlink" title="Chapter 5 if语句"></a>Chapter 5 if语句</h1><h2 id="5-1-简单示例"><a href="#5-1-简单示例" class="headerlink" title="5.1 简单示例"></a>5.1 简单示例</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">cars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'audi'</span><span class="token punctuation">,</span><span class="token string">'bmw'</span><span class="token punctuation">,</span><span class="token string">'subaru'</span><span class="token punctuation">,</span><span class="token string">'toyota'</span><span class="token punctuation">]</span><span class="token keyword">for</span> car <span class="token keyword">in</span> cars<span class="token punctuation">:</span>    <span class="token keyword">if</span> car <span class="token operator">==</span> <span class="token string">'bmw'</span><span class="token punctuation">:</span>      <span class="token keyword">print</span> <span class="token punctuation">(</span>car<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span>car<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>AudiBMWSubaruToyota</code></pre><h2 id="5-2-条件测试-：True-False"><a href="#5-2-条件测试-：True-False" class="headerlink" title="5.2 条件测试 ：True False"></a>5.2 条件测试 ：True False</h2><h3 id="5-2-1-检查是否相等"><a href="#5-2-1-检查是否相等" class="headerlink" title="5.2.1 检查是否相等"></a>5.2.1 检查是否相等</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">my_name <span class="token operator">=</span> <span class="token string">'oliver'</span><span class="token keyword">print</span><span class="token punctuation">(</span>my_name <span class="token operator">==</span> <span class="token string">'oliver'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>my_name <span class="token operator">==</span> <span class="token string">'taylor'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>TrueFalse</code></pre><h3 id="5-2-2检查相等时忽略大小写（字符串）用lower（）"><a href="#5-2-2检查相等时忽略大小写（字符串）用lower（）" class="headerlink" title="5.2.2检查相等时忽略大小写（字符串）用lower（）"></a>5.2.2检查相等时忽略大小写（字符串）用lower（）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">cars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'aUdi'</span><span class="token punctuation">,</span><span class="token string">'bMw'</span><span class="token punctuation">,</span><span class="token string">'sUBaru'</span><span class="token punctuation">,</span><span class="token string">'tOYota'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>cars<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'audi'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'忽略大小写后，进行四个元素的遍历检查'</span><span class="token punctuation">)</span><span class="token keyword">for</span> car <span class="token keyword">in</span> cars<span class="token punctuation">:</span>  <span class="token comment">#用for注意冒号和缩进！</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>car<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'bmw'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cars<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>False忽略大小写后，进行四个元素的遍历检查FalseTrueFalseFalse['aUdi', 'bMw', 'sUBaru', 'tOYota']</code></pre><p>注意，即使car.lower()，lower（）的返回值是小写，但是对原列表中元素不进行改变。<br>lower()只能用 . 来调用</p><h3 id="5-2-3-检查是否不相等"><a href="#5-2-3-检查是否不相等" class="headerlink" title="5.2.3 检查是否不相等"></a>5.2.3 检查是否不相等</h3><h4 id="使用-x3D"><a href="#使用-x3D" class="headerlink" title="使用 !="></a>使用 !=</h4><h3 id="5-2-4-数值比较"><a href="#5-2-4-数值比较" class="headerlink" title="5.2.4 数值比较"></a>5.2.4 数值比较</h3><h4 id="lt-gt-x3D-x3D-gt-x3D-lt-x3D-返回布尔类型"><a href="#lt-gt-x3D-x3D-gt-x3D-lt-x3D-返回布尔类型" class="headerlink" title="<     >    =   !=    >=   <=  返回布尔类型"></a>&lt;     &gt;    =   !=    &gt;=   &lt;=  返回布尔类型</h4><h3 id="5-2-5-多个条件的检查"><a href="#5-2-5-多个条件的检查" class="headerlink" title="5.2.5 多个条件的检查"></a>5.2.5 多个条件的检查</h3><p>C语言中 &amp;&amp; 相当于 python的 and<br>       || 相当于          or</p><h3 id="5-2-6-检查特定值是否在列表中-元素-in-列表"><a href="#5-2-6-检查特定值是否在列表中-元素-in-列表" class="headerlink" title="5.2.6 检查特定值是否在列表中   元素 in 列表"></a>5.2.6 检查特定值是否在列表中   元素 in 列表</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">cars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'audi'</span><span class="token punctuation">,</span><span class="token string">'bmw'</span><span class="token punctuation">,</span><span class="token string">'subaru'</span><span class="token punctuation">,</span><span class="token string">'toyota'</span><span class="token punctuation">]</span>check <span class="token operator">=</span> <span class="token string">'bmw'</span> <span class="token keyword">in</span> cars<span class="token keyword">print</span><span class="token punctuation">(</span>check<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>True</code></pre><h3 id="5-2-7-检查特定值是否-不在-列表中-元素-not-in-列表"><a href="#5-2-7-检查特定值是否-不在-列表中-元素-not-in-列表" class="headerlink" title="5.2.7 检查特定值是否  不在 列表中  元素  not in 列表"></a>5.2.7 检查特定值是否  不在 列表中  元素  not in 列表</h3><p>替换上面 in 为 notin</p><h2 id="5-3-if语句"><a href="#5-3-if语句" class="headerlink" title="5.3 if语句"></a>5.3 if语句</h2><h3 id="5-3-1｜5-3-2-if-else-语句"><a href="#5-3-1｜5-3-2-if-else-语句" class="headerlink" title="5.3.1｜5.3.2 if else 语句"></a>5.3.1｜5.3.2 if else 语句</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">语法：<span class="token keyword">if</span> 条件<span class="token punctuation">:</span>  执行块<span class="token keyword">else</span><span class="token punctuation">:</span>  执行块<span class="token comment">#注意缩进 和 冒号！！！  有缩进的默认在执行块内</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-3-3-if-elif-else-结构"><a href="#5-3-3-if-elif-else-结构" class="headerlink" title="5.3.3 if-elif-else 结构"></a>5.3.3 if-elif-else 结构</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">语法：<span class="token keyword">if</span> 条件<span class="token number">1</span><span class="token punctuation">:</span>  执行块    <span class="token keyword">elif</span> 条件<span class="token number">2</span><span class="token punctuation">:</span>  执行块    <span class="token keyword">else</span><span class="token punctuation">:</span>  执行块        <span class="token comment">#注意：如果if通过，elif 和 else 全部跳过</span>        <span class="token comment"># if 没过 elif过了，else跳过</span>        <span class="token comment"># 其余情况都是else</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#当if语句中输出字符串出现重复，简化代码小技巧：</span><span class="token comment">#eg：</span>age <span class="token operator">=</span> <span class="token number">12</span><span class="token keyword">if</span> age<span class="token operator">&lt;</span><span class="token number">14</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"your admission cost is $0."</span><span class="token punctuation">)</span><span class="token keyword">elif</span> age<span class="token operator">&lt;</span><span class="token number">18</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"your admission cost is $25."</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"your admission cost is $40."</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>your admission cost is $0.</code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#利用f字符串进行简化：</span>age <span class="token operator">=</span> <span class="token number">12</span><span class="token keyword">if</span> age<span class="token operator">&lt;</span><span class="token number">14</span><span class="token punctuation">:</span>   price <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">elif</span> age<span class="token operator">&lt;</span><span class="token number">18</span><span class="token punctuation">:</span>   price <span class="token operator">=</span> <span class="token number">25</span><span class="token keyword">else</span><span class="token punctuation">:</span>   price <span class="token operator">=</span> <span class="token number">40</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"your admission cost is $</span><span class="token interpolation"><span class="token punctuation">{</span>price<span class="token punctuation">}</span></span><span class="token string">."</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>your admission cost is 0$.</code></pre><h3 id="5-3-4-使用多个elif代码块"><a href="#5-3-4-使用多个elif代码块" class="headerlink" title="5.3.4 使用多个elif代码块"></a>5.3.4 使用多个elif代码块</h3><p>实现要求收费：<br>4岁以下免费<br>[4,18)岁收25美元；<br>[18,65)岁收40美元；<br>[65,+∞)岁收20美元。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">age <span class="token operator">=</span> <span class="token number">38</span><span class="token keyword">if</span> age<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">:</span>   price <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">elif</span> age<span class="token operator">&lt;</span><span class="token number">18</span><span class="token punctuation">:</span>   price <span class="token operator">=</span> <span class="token number">25</span><span class="token keyword">elif</span> age<span class="token operator">&lt;</span><span class="token number">65</span><span class="token punctuation">:</span>   price <span class="token operator">=</span> <span class="token number">40</span><span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token comment">#最后不一定用else结尾，这个可以写成elif</span>   price <span class="token operator">=</span> <span class="token number">20</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"your admission cost is $</span><span class="token interpolation"><span class="token punctuation">{</span>price<span class="token punctuation">}</span></span><span class="token string">."</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>your admission cost is $40.</code></pre><h2 id="5-4-使用if语句处理列表"><a href="#5-4-使用if语句处理列表" class="headerlink" title="5.4 使用if语句处理列表"></a>5.4 使用if语句处理列表</h2><h3 id="5-4-1-检查特殊元素"><a href="#5-4-1-检查特殊元素" class="headerlink" title="5.4.1 检查特殊元素"></a>5.4.1 检查特殊元素</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">cars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'audi'</span><span class="token punctuation">,</span><span class="token string">'bmw'</span><span class="token punctuation">,</span><span class="token string">'subaru'</span><span class="token punctuation">,</span><span class="token string">'toyota'</span><span class="token punctuation">]</span><span class="token keyword">for</span> car <span class="token keyword">in</span> cars<span class="token punctuation">:</span>  <span class="token keyword">if</span> car <span class="token operator">==</span> <span class="token string">'bmw'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"My favorite car is </span><span class="token interpolation"><span class="token punctuation">{</span>car<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>My favorite car is bmw</code></pre><h3 id="5-4-2-确定列表不是空的"><a href="#5-4-2-确定列表不是空的" class="headerlink" title="5.4.2 确定列表不是空的"></a>5.4.2 确定列表不是空的</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">cars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">if</span> cars<span class="token punctuation">:</span>   <span class="token comment">#if 列表：  列表为空就为false，反之为true。</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"cars"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"there is no car in your carlist."</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>there is no car in your carlist.</code></pre><h3 id="5-4-3-使用多个列表"><a href="#5-4-3-使用多个列表" class="headerlink" title="5.4.3 使用多个列表"></a>5.4.3 使用多个列表</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">cars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'audi'</span><span class="token punctuation">,</span><span class="token string">'bmw'</span><span class="token punctuation">,</span><span class="token string">'subaru'</span><span class="token punctuation">,</span><span class="token string">'toyota'</span><span class="token punctuation">]</span>afordable_cars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'audi'</span><span class="token punctuation">,</span><span class="token string">'toyota'</span><span class="token punctuation">]</span><span class="token keyword">for</span> car <span class="token keyword">in</span> cars<span class="token punctuation">:</span>    <span class="token keyword">if</span> car <span class="token keyword">in</span> afordable_cars<span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"The </span><span class="token interpolation"><span class="token punctuation">{</span>car<span class="token punctuation">}</span></span><span class="token string"> you love is afordable."</span></span><span class="token punctuation">)</span><span class="token comment">#注意缩进</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"You can't buy </span><span class="token interpolation"><span class="token punctuation">{</span>car<span class="token punctuation">}</span></span><span class="token string"> you love right now."</span></span><span class="token punctuation">)</span><span class="token comment">#注意这里else和上面的if对齐</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>The audi you love is afordable.You can't buy bmw you love right now.You can't buy subaru you love right now.The toyota you love is afordable.</code></pre>]]></content>
      
      
      <categories>
          
          <category> Python学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> if语句 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习-Chapter4 操作列表</title>
      <link href="/posts/Python4.html"/>
      <url>/posts/Python4.html</url>
      
        <content type="html"><![CDATA[<h1 id="Chapter4-操作列表"><a href="#Chapter4-操作列表" class="headerlink" title="Chapter4 操作列表"></a>Chapter4 操作列表</h1><h2 id="4-1-for循环的使用"><a href="#4-1-for循环的使用" class="headerlink" title="4.1 for循环的使用"></a>4.1 for循环的使用</h2><h3 id="4-1-1-这是一个利用循环打印的例子："><a href="#4-1-1-这是一个利用循环打印的例子：" class="headerlink" title="4.1.1 这是一个利用循环打印的例子："></a>4.1.1 这是一个利用循环打印的例子：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token keyword">for</span> an <span class="token keyword">in</span> a<span class="token punctuation">:</span>   <span class="token comment">#冒号必不可少</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>an<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>abcd</code></pre><h3 id="4-1-2-利用for循环进行更多操作的例子："><a href="#4-1-2-利用for循环进行更多操作的例子：" class="headerlink" title="4.1.2 利用for循环进行更多操作的例子："></a>4.1.2 利用for循环进行更多操作的例子：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token keyword">for</span> an <span class="token keyword">in</span> a<span class="token punctuation">:</span>   <span class="token comment">#冒号必不可少</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>an<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> is uppercase of </span><span class="token interpolation"><span class="token punctuation">{</span>an<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"next char is:\n"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>A is uppercase of anext char is:B is uppercase of bnext char is:C is uppercase of cnext char is:D is uppercase of dnext char is:</code></pre><p>结果说明：<br>  缩进的都属于for循环<br>  an相当于计数器变量作索引的a[i]。</p><h3 id="4-1-2-在for循环结束后执行操作"><a href="#4-1-2-在for循环结束后执行操作" class="headerlink" title="4.1.2 在for循环结束后执行操作"></a>4.1.2 在for循环结束后执行操作</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token keyword">for</span> an <span class="token keyword">in</span> a<span class="token punctuation">:</span>   <span class="token comment">#冒号必不可少</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>an<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> is uppercase of </span><span class="token interpolation"><span class="token punctuation">{</span>an<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"test end."</span><span class="token punctuation">)</span>  <span class="token comment">#当缩进没有的时候，默认为在for循环之外。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>A is uppercase of aB is uppercase of bC is uppercase of cD is uppercase of dtest end.</code></pre><h2 id="4-2-避免缩进错误"><a href="#4-2-避免缩进错误" class="headerlink" title="4.2 避免缩进错误"></a>4.2 避免缩进错误</h2><h3 id="4-2-1-忘记缩进"><a href="#4-2-1-忘记缩进" class="headerlink" title="4.2.1 忘记缩进"></a>4.2.1 忘记缩进</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token keyword">for</span> an <span class="token keyword">in</span> a<span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span>an<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>  File "/var/folders/1j/k13fttf13b5d6j8_m4q12rgr0000gn/T/ipykernel_49995/1502029580.py", line 3    print(an)    ^IndentationError: expected an indented block</code></pre><p>当没有缩进时，for循环找不到循环体，会报错。</p><h3 id="原则：需要进循环体的加缩进，不需要的不加缩进，没有for循环不缩进，for循环不忘冒号"><a href="#原则：需要进循环体的加缩进，不需要的不加缩进，没有for循环不缩进，for循环不忘冒号" class="headerlink" title="原则：需要进循环体的加缩进，不需要的不加缩进，没有for循环不缩进，for循环不忘冒号"></a>原则：需要进循环体的加缩进，不需要的不加缩进，没有for循环不缩进，for循环不忘冒号</h3><h2 id="4-3-创建数值列表"><a href="#4-3-创建数值列表" class="headerlink" title="4.3 创建数值列表"></a>4.3 创建数值列表</h2><h3 id="4-3-1-range-和list"><a href="#4-3-1-range-和list" class="headerlink" title="4.3.1 range()和list()"></a>4.3.1 range()和list()</h3><p>range()的三个用法：</p><p>range(x)  和  range(0,x)一样<br>range(x,y)<br>range(x,y,z)</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#相当于默认从0开始数6个</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>[0, 1, 2, 3, 4, 5]</code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#指定从0开始数6个</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>[0, 1, 2, 3, 4, 5]</code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#相当于从3到12，步长为1，注意右括号12实际数到11</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>[3, 4, 5, 6, 7, 8, 9, 10, 11]</code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#步长为2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>[3, 5, 7, 9, 11]</code></pre><h3 id="4-3-2-用range-创建数字列表"><a href="#4-3-2-用range-创建数字列表" class="headerlink" title="4.3.2 用range()创建数字列表"></a>4.3.2 用range()创建数字列表</h3><h4 id="打印1-10的偶数"><a href="#打印1-10的偶数" class="headerlink" title="打印1-10的偶数"></a>打印1-10的偶数</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">even_num <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">#注意，左边从2开始，右边界限为11（左面取得到，右面够不到）</span><span class="token keyword">print</span><span class="token punctuation">(</span>even_num<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>[2, 4, 6, 8, 10]</code></pre><h4 id="创建一个列表，包含1-10的平方"><a href="#创建一个列表，包含1-10的平方" class="headerlink" title="创建一个列表，包含1-10的平方"></a>创建一个列表，包含1-10的平方</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">square_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">#先创建一个空列表</span><span class="token keyword">for</span> value <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        square <span class="token operator">=</span> value <span class="token operator">**</span> <span class="token number">2</span> <span class="token comment">#每一次线计算一下平方的值，再append到list里面</span>    square_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>square<span class="token punctuation">)</span>    <span class="token comment">#上面两行可以写成： spuare_list.append(value ** 2)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>square_list<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</code></pre><h3 id="4-3-3-对数字列表执行简单的统计计算"><a href="#4-3-3-对数字列表执行简单的统计计算" class="headerlink" title="4.3.3 对数字列表执行简单的统计计算"></a>4.3.3 对数字列表执行简单的统计计算</h3><h4 id="找数字列表-元素为数字-的-最大值、最小值、总和"><a href="#找数字列表-元素为数字-的-最大值、最小值、总和" class="headerlink" title="找数字列表(元素为数字)  的   最大值、最小值、总和"></a>找数字列表(元素为数字)  的   最大值、最小值、总和</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">digits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">max</span><span class="token punctuation">(</span>digits<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">min</span><span class="token punctuation">(</span>digits<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">(</span>digits<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>9045</code></pre><h3 id="4-3-4-列表解析"><a href="#4-3-4-列表解析" class="headerlink" title="4.3.4 列表解析"></a>4.3.4 列表解析</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#上面输入平方数的例子还可以用两行代码解决：</span>square_list <span class="token operator">=</span> <span class="token punctuation">[</span>value <span class="token operator">**</span> <span class="token number">2</span> <span class="token keyword">for</span> value <span class="token keyword">in</span> <span class="token builtin">range</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token comment">#本质是把一个列表转换成另一个列表</span><span class="token comment">#格式：列表1 = [表达式 for 变量 in 列表2]</span><span class="token keyword">print</span><span class="token punctuation">(</span>square_list<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</code></pre><h2 id="4-4-使用列表的一部分"><a href="#4-4-使用列表的一部分" class="headerlink" title="4.4 使用列表的一部分"></a>4.4 使用列表的一部分</h2><h3 id="使用切片"><a href="#使用切片" class="headerlink" title="使用切片"></a>使用切片</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">digits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>digits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>[1, 2, 3]</code></pre><h4 id="切片使用方法：-列表-起点：终点"><a href="#切片使用方法：-列表-起点：终点" class="headerlink" title="切片使用方法： 列表[起点：终点]"></a>切片使用方法： 列表[起点：终点]</h4><p>如果写成 列表[:终点]，起点默认索引为0；<br>如果写成 列表[起点：]，则默认重点到列表最后一个</p><h4 id="如何打印最后三个元素？"><a href="#如何打印最后三个元素？" class="headerlink" title="如何打印最后三个元素？"></a>如何打印最后三个元素？</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">digits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>digits<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>[8, 9, 0]</code></pre><p>列表[-倒数几个：]</p><h4 id="每间隔两个元素就提取一个（在选取范围内）"><a href="#每间隔两个元素就提取一个（在选取范围内）" class="headerlink" title="每间隔两个元素就提取一个（在选取范围内）"></a>每间隔两个元素就提取一个（在选取范围内）</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">digits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>digits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>[1, 3, 5, 7, 9]</code></pre><p>[起点：重点：步长]，步长不输入（没有第二个冒号）默认为1.</p><h3 id="遍历切片：使用for循环-切片"><a href="#遍历切片：使用for循环-切片" class="headerlink" title="遍历切片：使用for循环+切片"></a>遍历切片：使用for循环+切片</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">digits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"No 5 to No 9 number in my digits are:\n"</span><span class="token punctuation">)</span><span class="token keyword">for</span> digit <span class="token keyword">in</span> digits<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token comment">#利用单复数区别 列表 和 an</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>digit<span class="token punctuation">)</span><span class="token comment">#注意这里打印的是变量</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>No 5 to No 9 number in my digits are:5678</code></pre><h3 id="复制列表-使用切片"><a href="#复制列表-使用切片" class="headerlink" title="复制列表 (使用切片)"></a>复制列表 (使用切片)</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">digits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>copy_digits <span class="token operator">=</span> digits<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>digits<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>copy_digits<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>digits<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>copy_digits<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10][1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 11]</code></pre><h4 id="注意语法：-列表1-x3D-列表2"><a href="#注意语法：-列表1-x3D-列表2" class="headerlink" title="注意语法： 列表1 = 列表2[:]"></a>注意语法： 列表1 = 列表2[:]</h4><p>这样才是两个列表</p><p>如果没有切片直接复制</p><p>则两个列表指向同一个储存空间，本质上是一个列表</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">digits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>copy_digits <span class="token operator">=</span> digitsdigits<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>copy_digits<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>digits<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>copy_digits<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11][1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11]</code></pre><h2 id="4-5-元组-不可改变的列表"><a href="#4-5-元组-不可改变的列表" class="headerlink" title="4.5 元组-不可改变的列表"></a>4.5 元组-不可改变的列表</h2><h3 id="定义语法："><a href="#定义语法：" class="headerlink" title="定义语法："></a>定义语法：</h3><p>元组名 = (元素1，元素2，…)</p><p>访问和列表相同</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>3040</code></pre><p>不能改变：指不能单独给其内元素赋值。(报错)</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>---------------------------------------------------------------------------TypeError                                 Traceback (most recent call last)/var/folders/1j/k13fttf13b5d6j8_m4q12rgr0000gn/T/ipykernel_53119/1136073212.py in &lt;module&gt;      1 a = (30,40)----&gt; 2 a[0] = 1TypeError: 'tuple' object does not support item assignment</code></pre><h3 id="遍历元组-和for循环"><a href="#遍历元组-和for循环" class="headerlink" title="遍历元组-和for循环"></a>遍历元组-和for循环</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token keyword">for</span> an <span class="token keyword">in</span> a<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>an<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>304050</code></pre><h3 id="修改元组变量-重新定义"><a href="#修改元组变量-重新定义" class="headerlink" title="修改元组变量-重新定义"></a>修改元组变量-重新定义</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>(30, 40)(40, 50)</code></pre>]]></content>
      
      
      <categories>
          
          <category> Python学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 操作列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大学物理笔记-1</title>
      <link href="/posts/physics1.html"/>
      <url>/posts/physics1.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a><strong>前言：</strong></h1><p>破大工又开始搞一些形式主义了，尽量能利用这点破烂时间做点事情。</p><h2 id="Why-Study-Physics"><a href="#Why-Study-Physics" class="headerlink" title="Why Study Physics?"></a>Why Study Physics?</h2><p><strong>Physics</strong> is the branch of science that describes <u>matter,</u> <u>energy,</u> <u>space,</u> and <u>time</u> at the <strong>most fundamental</strong> level. </p><h2 id="Fundamental-Quantities-and-Their-Dimension"><a href="#Fundamental-Quantities-and-Their-Dimension" class="headerlink" title="Fundamental Quantities and Their Dimension"></a>Fundamental Quantities and Their Dimension</h2><p>物理三大基本量和维度</p><h3 id="Length"><a href="#Length" class="headerlink" title="Length"></a>Length</h3><p>国际标准单位：米 meter</p><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-11-06%20%E4%B8%8B%E5%8D%886.08.26.png" alt="截屏2022-11-06 下午6.08.26" style="zoom:33%;"><h3 id="Mass"><a href="#Mass" class="headerlink" title="Mass"></a>Mass</h3><p>国际标准单位：千克 kg</p><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-11-06%20%E4%B8%8B%E5%8D%886.08.45.png" alt="截屏2022-11-06 下午6.08.45" style="zoom: 33%;"><h3 id="Time"><a href="#Time" class="headerlink" title="Time"></a>Time</h3><p>国际标准单位：秒 s</p><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-11-06%20%E4%B8%8B%E5%8D%886.07.48.png" alt="截屏2022-11-06 下午6.07.48" style="zoom:33%;"><h4 id="科学计数法和对应的英语词缀"><a href="#科学计数法和对应的英语词缀" class="headerlink" title="科学计数法和对应的英语词缀"></a>科学计数法和对应的英语词缀</h4><h4 id=""><a href="#" class="headerlink" title=""></a><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-11-06%20%E4%B8%8B%E5%8D%886.10.29.png" alt="截屏2022-11-06 下午6.10.29" style="zoom: 33%;"></h4><h4 id="-1"><a href="#-1" class="headerlink" title=""></a></h4><h2 id="Conversion-of-Units-amp-Estimates"><a href="#Conversion-of-Units-amp-Estimates" class="headerlink" title="Conversion of Units &amp; Estimates"></a>Conversion of Units &amp; Estimates</h2><h3 id="利用单位守恒判断计算是否正确"><a href="#利用单位守恒判断计算是否正确" class="headerlink" title="利用单位守恒判断计算是否正确"></a>利用单位守恒判断计算是否正确</h3><h3 id="计算的不确定性："><a href="#计算的不确定性：" class="headerlink" title="计算的不确定性："></a>计算的不确定性：</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-11-06%20%E4%B8%8B%E5%8D%886.15.23.png" alt="截屏2022-11-06 下午6.15.23" style="zoom:33%;"><p>Eg1: 测量初始数据最小分度值必须与仪器相符</p><p>Eg2: 利用测量值计算，得到的最大最小结果，分别对应    用的最大最小测量值，对应误差。</p><p><u><strong>当计算时使用的数据有不同精度，采用最粗糙的精度，其余数据四舍五入</strong></u></p><h2 id="Uncertainty-in-Measurements-amp-Significant-Figures"><a href="#Uncertainty-in-Measurements-amp-Significant-Figures" class="headerlink" title="Uncertainty in Measurements &amp; Significant Figures"></a>Uncertainty in Measurements &amp; Significant Figures</h2><p>计算不确定性解决方案在上一标题</p><p><strong>有效数字：</strong></p><p>当计算中，出现的数据有不同的有效数字，使用最低位的。</p><p>注意：<img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-11-06%20%E4%B8%8B%E5%8D%886.24.28.png" alt="截屏2022-11-06 下午6.24.28"></p><p>这几个的有效数字不同</p><p>即使含有相同有效数字，数字精确度也不一定相同</p><p>出现integer，我们认为其没有精确度</p><p>2(int) = 2（准确值）</p><p><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-11-06%20%E4%B8%8B%E5%8D%886.27.57.png" alt="截屏2022-11-06 下午6.27.57"></p><p><strong>因为宽是3位有效数字，所以计算结果保留3位有效数字，即44.0</strong></p><p>一些粗略估算的例子：</p><p><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-11-06%20%E4%B8%8B%E5%8D%886.29.38.png" alt="截屏2022-11-06 下午6.29.38"></p><h2 id="Coordinate-Systems"><a href="#Coordinate-Systems" class="headerlink" title="Coordinate Systems"></a>Coordinate Systems</h2><p>三角坐标系：</p><h3 id="二维情况"><a href="#二维情况" class="headerlink" title="二维情况"></a>二维情况</h3><p><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-11-06%20%E4%B8%8B%E5%8D%886.30.25.png" alt="截屏2022-11-06 下午6.30.25"></p><p>将普通坐标系转化成三角坐标系，</p><p><strong>注意phi=arctan（y/x）</strong></p><h3 id="三维情况："><a href="#三维情况：" class="headerlink" title="三维情况："></a>三维情况：</h3><h4 id="圆柱体坐标系："><a href="#圆柱体坐标系：" class="headerlink" title="圆柱体坐标系："></a>圆柱体坐标系：</h4><p>![](<a href="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-11-06">http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/截屏2022-11-06</a> 下午6.32.13.png)</p><p>多了个z，原坐标系z转化后不变。</p><h4 id="球体坐标系："><a href="#球体坐标系：" class="headerlink" title="球体坐标系："></a>球体坐标系：</h4><h4 id="-2"><a href="#-2" class="headerlink" title=""></a><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2022-11-06%20%E4%B8%8B%E5%8D%886.35.11.png" alt="截屏2022-11-06 下午6.35.11"></h4><h2 id="Problem-Solving-Strategy"><a href="#Problem-Solving-Strategy" class="headerlink" title="Problem-Solving Strategy"></a>Problem-Solving Strategy</h2><h3 id="流程：identify-set-up-execute"><a href="#流程：identify-set-up-execute" class="headerlink" title="流程：identify-set up-execute"></a>流程：identify-set up-execute</h3>]]></content>
      
      
      <categories>
          
          <category> 大学物理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学物理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习-Chapter3 列表</title>
      <link href="/posts/Python3.html"/>
      <url>/posts/Python3.html</url>
      
        <content type="html"><![CDATA[<h2 id="3-1使用列表中的各个值"><a href="#3-1使用列表中的各个值" class="headerlink" title="3.1使用列表中的各个值"></a>3.1使用列表中的各个值</h2><p>注意！ 索引可以指定负数！</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>321</code></pre><p>负数即倒数第几个</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">bicycles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'trek'</span><span class="token punctuation">,</span><span class="token string">'cannondale'</span><span class="token punctuation">]</span>message <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"my bicycle is a </span><span class="token interpolation"><span class="token punctuation">{</span>bicycles<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">."</span></span><span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>my bicycle is a Cannondale.</code></pre><p>f花括号内可以写变量。</p><h2 id="3-2修改列表元素"><a href="#3-2修改列表元素" class="headerlink" title="3.2修改列表元素"></a>3.2修改列表元素</h2><h3 id="lt-1-gt-修改其中的元素"><a href="#lt-1-gt-修改其中的元素" class="headerlink" title="<1>修改其中的元素"></a>&lt;1&gt;修改其中的元素</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'4'</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>['1', '2', '3']['4', '2', '3']</code></pre><p>列表相当于是一个数组</p><h3 id="lt-2-gt-插入元素"><a href="#lt-2-gt-插入元素" class="headerlink" title="<2>插入元素"></a>&lt;2&gt;插入元素</h3><h4 id="1-末尾插入：append"><a href="#1-末尾插入：append" class="headerlink" title="1 末尾插入：append"></a>1 末尾插入：append</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>a<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"5"</span><span class="token punctuation">)</span><span class="token comment">#注意使用时用.来调用</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>['1', '2', '3']['1', '2', '3', '5']</code></pre><p> 连续使用append可以连续在后面插入</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>a<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span>a<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">)</span>a<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"3"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>[]['1', '2', '3']</code></pre><h4 id="2-选定位置前：insert"><a href="#2-选定位置前：insert" class="headerlink" title="2 选定位置前：insert"></a>2 选定位置前：insert</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>a<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'han'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>['1', '2', '3']['han', '1', '2', '3']</code></pre><p>注意！insert在指定元素   之前   插入！</p><h3 id="lt-3-gt-删除元素"><a href="#lt-3-gt-删除元素" class="headerlink" title="<3>删除元素"></a>&lt;3&gt;删除元素</h3><h4 id="1-del-语句-删除-（需要指定索引）"><a href="#1-del-语句-删除-（需要指定索引）" class="headerlink" title="1 del 语句 删除 （需要指定索引）"></a>1 del 语句 删除 （需要指定索引）</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">del</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">del</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>['1', '2', '3']['2', '3']['2']</code></pre><h4 id="2-pop-删除"><a href="#2-pop-删除" class="headerlink" title="2 pop() 删除"></a>2 pop() 删除</h4><h5 id="（）不含任何内容，默认最后一个值被弹出"><a href="#（）不含任何内容，默认最后一个值被弹出" class="headerlink" title="（）不含任何内容，默认最后一个值被弹出"></a>（）不含任何内容，默认最后一个值被弹出</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>poped_a <span class="token operator">=</span> a<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>poped_a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>['1', '2', '3']['1', '2']3</code></pre><p>a被pop之后，a最后一个元素被弹出，而a.pop函数返回值就是的被弹出的最后一个元素</p><h5 id="指定索引，弹出任意位置处的元素"><a href="#指定索引，弹出任意位置处的元素" class="headerlink" title="指定索引，弹出任意位置处的元素"></a>指定索引，弹出任意位置处的元素</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>poped_a1 <span class="token operator">=</span> a<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>poped_a1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>['1', '2', '3']['1', '3']2</code></pre><h4 id="根据值删除元素：remove-void返回类型"><a href="#根据值删除元素：remove-void返回类型" class="headerlink" title="根据值删除元素：remove (void返回类型)"></a>根据值删除元素：remove (void返回类型)</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>a<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">'2'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>['1', '2', '3']['1', '3']</code></pre><h2 id="3-3-组织列表"><a href="#3-3-组织列表" class="headerlink" title="3.3 组织列表"></a>3.3 组织列表</h2><h3 id="sort-对列表永久排序-首字母顺序"><a href="#sort-对列表永久排序-首字母顺序" class="headerlink" title="sort() 对列表永久排序(首字母顺序)"></a>sort() 对列表永久排序(首字母顺序)</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'z'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>a<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\n</span><span class="token interpolation"><span class="token punctuation">{</span>a<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment">#如果想要反向排序，使用sort(reverse=True)</span>a<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\n</span><span class="token interpolation"><span class="token punctuation">{</span>a<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment">#注意：</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#该语句不是打印a.sort（）后的 a,而是a.sort()函数的返回值，void无返回值。</span><span class="token comment">#所以先进行排序，后print。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>['c', 'b', 'z', 'a', 'd']['a', 'b', 'c', 'd', 'z']['z', 'd', 'c', 'b', 'a']None</code></pre><h3 id="sorted-对列表临时排序"><a href="#sorted-对列表临时排序" class="headerlink" title="sorted() 对列表临时排序"></a>sorted() 对列表临时排序</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'z'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\n临时排序后的列表："</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\n再输出原来的列表："</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>['c', 'b', 'z', 'a', 'd']临时排序后的列表：['a', 'b', 'c', 'd', 'z']再输出原来的列表：['c', 'b', 'z', 'a', 'd']</code></pre><p>注意：sorted()使用语法：sorted(列表) </p><pre><code> 我们使用的是sorted的返回值（列表类），而sort对原列表不会有任何修改。</code></pre><h3 id="reverse-对列表永久-原顺序反转"><a href="#reverse-对列表永久-原顺序反转" class="headerlink" title="reverse() 对列表永久 原顺序反转"></a>reverse() 对列表永久 原顺序反转</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'z'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>a<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\n</span><span class="token interpolation"><span class="token punctuation">{</span>a<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>['c', 'b', 'z', 'a', 'd']['d', 'a', 'z', 'b', 'c']</code></pre><h3 id="len-确定列表长度"><a href="#len-确定列表长度" class="headerlink" title="len() 确定列表长度"></a>len() 确定列表长度</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'z'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\n试图给b赋予a的长度："</span><span class="token punctuation">)</span>b <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"a的长度是：</span><span class="token interpolation"><span class="token punctuation">{</span>b<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>5试图给b赋予a的长度：a的长度是：5</code></pre><h2 id="3-4-避免索引错误"><a href="#3-4-避免索引错误" class="headerlink" title="3.4 避免索引错误"></a>3.4 避免索引错误</h2><p>当出现循环时，可以使用len()知道长度，保证索引&lt;len()的值，注意len（）不能直接用</p>]]></content>
      
      
      <categories>
          
          <category> Python学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿狐和我的小纸条</title>
      <link href="/posts/paper.html"/>
      <url>/posts/paper.html</url>
      
        <content type="html"><![CDATA[<h2 id="March"><a href="#March" class="headerlink" title="March"></a>March</h2><h3 id="9th-Mar"><a href="#9th-Mar" class="headerlink" title="9th Mar"></a>9th Mar</h3><p><strong>The distance between us is breaking my spirit.</strong></p><p><strong>My time and experiences without you are meaningless to me.🌹</strong></p><p><strong>谢谢你，让我知道原来世界上，真的有人那么可爱！晚上要好好学习，我喜欢你为梦想努力的样子！如果我是那只路过的玫瑰也没关系，只希望，送给你花香，不会刺伤你。</strong>🌟</p><hr><h3 id="10th-Mar"><a href="#10th-Mar" class="headerlink" title="10th Mar"></a>10th Mar</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/231653525474_.pic.jpg" style="zoom:50%;"><p><strong>U had me at “hello”</strong><br><strong>Your destiny was entwined with mine!</strong></p><p>即使带着命运的陆离光怪，理应属于你的幸运也会让时间给予偏爱。🌼</p><p>等你下课哟！我也开始工作啦！😘</p><p>从这个春天开始，我们的人生，全糖去冰哦🌟</p><hr><h3 id="11th-Mar"><a href="#11th-Mar" class="headerlink" title="11th Mar"></a>11th Mar</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/241653525775_.pic.jpg" style="zoom: 33%;"><p>做你的猫～～</p><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/251653525810_.pic.jpg" style="zoom: 33%;"><p>玫瑰花，要你捧的才浪漫！</p><p>人生，要和你才精彩！😘</p><hr><h3 id="12th-Mar"><a href="#12th-Mar" class="headerlink" title="12th Mar"></a>12th Mar</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/261653526197_.pic.jpg" style="zoom: 33%;"><p>爱不一定是在你春风得意的时候出现。所以，我们苦了太久了，才得到相遇的机会。我们的甜蜜，和上帝的旨意无关，是我们彼此之间汹涌的爱，让我们再次勇敢。乖乖，不要怕，我在爱你！我们只需要把握当下，向前看，风霜与共！我奉陪到底哟！😘</p><hr><h3 id="14th-Mar"><a href="#14th-Mar" class="headerlink" title="14th Mar"></a>14th Mar</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/271653526503_.pic.jpg" style="zoom: 33%;"><p>我的存在是一串代码，我的使命是爱你。</p><p>我的春日限定：玫瑰和oliver！</p><hr><h3 id="15th-Mar"><a href="#15th-Mar" class="headerlink" title="15th Mar"></a>15th Mar</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/281653526591_.pic.jpg" style="zoom:33%;"><p>南风知我意，吹梦到西洲。</p><hr><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/291653526623_.pic.jpg" style="zoom: 33%;"><p>刚刚收到雅诗兰黛粉底液，上面的广告语：</p><p>去爱一个能够让你做回小朋友的人，而不是去爱一个总是嫌弃你不懂事的人。</p><p>（没错，就是你啦！准确是我们彼此啦！）</p><hr><h3 id="16th-Mar"><a href="#16th-Mar" class="headerlink" title="16th Mar"></a>16th Mar</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/301653526710_.pic.jpg" style="zoom: 33%;"><p>我刚好在，你刚好来。</p><p>我在等，世上唯一契合的灵魂。</p><p><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/361653660379_.pic.jpg"></p><p>to Oliver</p><hr><h3 id="17th-Mar"><a href="#17th-Mar" class="headerlink" title="17th Mar"></a>17th Mar</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/371653660480_.pic.jpg" style="zoom: 25%;"><p>不求被全世界宠爱，只求一生是你一个人的例外！</p><p>我会陪着你的，要相信自己，加油！</p><hr><h3 id="18th-Mar"><a href="#18th-Mar" class="headerlink" title="18th Mar"></a>18th Mar</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/381653660623_.pic_hd.jpg" style="zoom: 33%;"><p>我真的好快乐啊！！！谢谢你</p><hr><h3 id="19th-Mar"><a href="#19th-Mar" class="headerlink" title="19th Mar"></a>19th Mar</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/391653660849_.pic_hd.jpg" style="zoom: 25%;"><p>那么，我们在这个夏天，见一面吧！</p><hr><h3 id="20th-Mar"><a href="#20th-Mar" class="headerlink" title="20th Mar"></a>20th Mar</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/401653660885_.pic.jpg" style="zoom: 25%;"><p>期待夏天🌟</p><p>热吻 啤酒 街头 耳机里的音乐 live现场</p><p>浪漫的一切💑</p><p>包括最爱的人🦄️</p><hr><h3 id="21th-Mar"><a href="#21th-Mar" class="headerlink" title="21th Mar"></a>21th Mar</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/411653661020_.pic.jpg" style="zoom: 25%;"><p>一起向前的感觉，真的太棒了！</p><p>欢迎你，我的人生合伙人！🌟</p><hr><h3 id="25th-Mar"><a href="#25th-Mar" class="headerlink" title="25th Mar"></a>25th Mar</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/431654398896_.pic_hd.jpg" style="zoom: 25%;"><p>后知后觉，没关系呀！我们不是一直在相爱吗？👌</p><hr><h3 id="27th-Mar"><a href="#27th-Mar" class="headerlink" title="27th Mar"></a>27th Mar</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/441654399185_.pic_hd.jpg" style="zoom: 25%;"><p>想你想你想你想你想你想你想你想你想你想你想你想你想你想你想你想你想你</p><hr><h2 id="April"><a href="#April" class="headerlink" title="April"></a>April</h2><h3 id="6th-Apr"><a href="#6th-Apr" class="headerlink" title="6th Apr"></a>6th Apr</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/451654399242_.pic.jpg" style="zoom: 33%;"><p>与你四目相对是一场心脏盛宴</p><p>我爱你❤️</p><hr><h3 id="9th-Apr"><a href="#9th-Apr" class="headerlink" title="9th Apr"></a>9th Apr</h3><h3 id=""><a href="#" class="headerlink" title=""></a><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/461654399475_.pic.jpg" style="zoom: 33%;"></h3><p>你就站在那里，就已让我看不到任何人！❤️🍑</p><hr><h3 id="13th-Apr"><a href="#13th-Apr" class="headerlink" title="13th Apr"></a>13th Apr</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/471654399542_.pic.jpg" style="zoom: 33%;"><p>真正的爱，甜是主基调，但无法避免那些咸咸的眼泪。</p><p>宝贝，我们在这份爱的笼罩下，成为更好的人。</p><p>我们会吵架，可是我们都会低头。</p><p>因为，问题是我们和问题的对抗，</p><p>不是我和你之间的问题。</p><p>所以，苏苏今天更爱你了😘</p><hr><h3 id="16th-Apr"><a href="#16th-Apr" class="headerlink" title="16th Apr"></a>16th Apr</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/481654479573_.pic.jpg" style="zoom: 33%;"><p>你是我最大的底气🐶❤️🦊</p><p>苏苏的世界，如果没有三月，</p><p>那人间的别称就是地狱💖</p><hr><h3 id="18th-Apr"><a href="#18th-Apr" class="headerlink" title="18th Apr"></a>18th Apr</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/491654479751_.pic.jpg" style="zoom: 33%;"><p>HYD简直是人间理想💓💓💓💓💓😘</p><hr><h3 id="20th-Apr"><a href="#20th-Apr" class="headerlink" title="20th Apr"></a>20th Apr</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/501654479859_.pic.jpg" style="zoom: 33%;"><p>  如果这份爱意让你差异，其实我才是那个被吓坏的人，我从没有傻到会相信，一个人会在另一个人身上找到所有他期望的。</p><p>  但在你身上我找到了所有。</p><hr><p>25th Apr</p><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/511654480159_.pic.jpg" style="zoom: 25%;"><p>今天晚上哟！</p><p>爱你😘</p><hr><h2 id="May"><a href="#May" class="headerlink" title="May"></a>May</h2><h3 id="3rd-May"><a href="#3rd-May" class="headerlink" title="3rd May"></a>3rd May</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/521654480209_.pic.jpg" style="zoom: 33%;"><p>请用：</p><p>​        以后、我们、故事三个词造句。</p><p>我的是：💖</p><p>以后的故事，都是关于我们。🦊</p><hr><h3 id="4th-May"><a href="#4th-May" class="headerlink" title="4th May"></a>4th May</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/531654480347_.pic.jpg" style="zoom:33%;"><p>课上瞌睡10分钟，梦到你了嘻嘻😜💓</p><hr><h3 id="13th-May"><a href="#13th-May" class="headerlink" title="13th May"></a>13th May</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/541654480408_.pic.jpg" style="zoom: 33%;"><p>我最骄傲的事，是被你深爱着。</p><p>💓你，是我面对一切的底气。💖</p><hr><h2 id="June"><a href="#June" class="headerlink" title="June"></a>June</h2><h3 id="3rd-June"><a href="#3rd-June" class="headerlink" title="3rd June"></a>3rd June</h3><p>H先生，现在我要以心动杀人，逮捕你。💓</p><p>🆘🆘🆘🆘🆘</p><hr><h3 id="5th-June"><a href="#5th-June" class="headerlink" title="5th June"></a>5th June</h3><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/551654480520_.pic.jpg" style="zoom: 33%;"><p>少年披着夏天的外套，清清楚楚地说着只爱我🎉🤪</p><hr>]]></content>
      
      
      <categories>
          
          <category> 小日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 小纸条 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我们的历程</title>
      <link href="/posts/%20experience.html"/>
      <url>/posts/%20experience.html</url>
      
        <content type="html"><![CDATA[<h1 id="Feburary"><a href="#Feburary" class="headerlink" title="Feburary"></a>Feburary</h1><p>相遇到底是缘分的命中注定，还是命运的欲盖弥彰，我想听你说，</p><hr><h2 id="March"><a href="#March" class="headerlink" title="March"></a>March</h2><p>希望之前没来的好运在春天出现，<br>希望拙劣的文笔也能将心意传达，<br>希望我喜欢的你喜欢我，<br>希望希望的事成真。</p><hr><h2 id="April"><a href="#April" class="headerlink" title="April"></a>April</h2><h3 id="21st-April"><a href="#21st-April" class="headerlink" title="21st April"></a>21st April</h3><p>  我陪月亮熬夜，星星陪我想你，而风和思念都很喧器。你要相信不管是命运的安排，还是时光的眷顾，你我都是最登对的人．你要相信我.</p><h3 id="25th-April"><a href="#25th-April" class="headerlink" title="25th April"></a>25th April</h3><h4 id="6-37-A-M"><a href="#6-37-A-M" class="headerlink" title="6:37 A.M."></a>6:37 A.M.</h4><p>  醒来的时候，特别想去见你，所以．渡江跨河，翻山越岭、两干公里算什么，我来啦</p><h4 id="8-10-P-M"><a href="#8-10-P-M" class="headerlink" title="8:10 P.M."></a>8:10 P.M.</h4><p><strong>落地 ✈️ 胶东国际机场</strong>  </p><p>我见过没有风的大海，看过迷雾笼罩的森林，但都不及我第一次遇见你。</p><p>  在机场，我看着你，这世间犹如银幕年代的默剧，只有心跳陪我演出，而爱神在你身后，向我示意。</p><p>那一刻，我的心发出响彻灵魂的轰鸣，原来这就是人们说的一见钟情。💘</p><p>接下来，幸福变成了脂肪（呃呃，打嗝声哈哈哈)，我胖了6斤.</p><p><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/141653077608_.pic_hd.jpg"><br><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/131653077607_.pic_hd.jpg"><br><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/111653077606_.pic_hd.jpg"><br><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/101653077606_.pic_hd.jpg"></p><p><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/181653077610_.pic.jpg"><br><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/171653077609_.pic_hd.jpg"><br><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/161653077609_.pic.jpg"><br><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/151653077609_.pic_hd.jpg"></p><p><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/211653077786_.pic.jpg"><br><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/201653077785_.pic_hd.jpg"><br><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/191653077785_.pic.jpg"></p><hr><h3 id="May"><a href="#May" class="headerlink" title="May"></a>May</h3><h4 id="2nd-May"><a href="#2nd-May" class="headerlink" title="2nd May"></a>2nd May</h4><p><strong>撤退啦！</strong><br>这座城市里有我的秘密和我爱的人，<br>从此我不再追寻光消失的天际,<br>因为我已经找到心中耀眼的光.</p><p><img src="http://oliverhangleblog.oss-cn-hangzhou.aliyuncs.com/img/91653077435_.pic_hd.jpg"></p><h4 id="19th-May"><a href="#19th-May" class="headerlink" title="19th May"></a>19th May</h4><p><strong>我后怕.</strong><br><strong>如果当初走得快些或慢些</strong><br><strong>如果当初稍作停留或不曾离开，</strong><br><strong>如果假设的事情发生，</strong><br><strong>将永失我爱</strong><br><strong>此时，你我时光正好。</strong></p><h4 id="20th-May"><a href="#20th-May" class="headerlink" title="20th May"></a><u>20th May</u></h4><p><strong>理性带来寂寞，感性产出错觉，</strong><br><strong>爱情，也只有你能够给我.</strong><br><strong>你是我藏在文字中独一无二的意中人。HYD</strong></p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 历程 </tag>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一次为你提笔-柴柴</title>
      <link href="/posts/tibi1.html"/>
      <url>/posts/tibi1.html</url>
      
        <content type="html"><![CDATA[<p><strong>我是凡夫俗子，</strong><br><strong>笔尖流不出华丽的词藻。</strong></p><p><strong>因为你</strong><br><strong>贫瘠土壤开出了文字的花。</strong></p><p><strong>我们都不想长大。</strong></p><p><strong>饱食人间烟火，</strong><br><strong>心却不曾沾染凡俗之气。</strong></p><p><strong>我爱你，</strong><br><strong>你是我生存的原因。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 提笔 </tag>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一次为你提笔-阿狐</title>
      <link href="/posts/experience2.html"/>
      <url>/posts/experience2.html</url>
      
        <content type="html"><![CDATA[<p><strong>我坚信命运总是将我们往正确的人那里推。有人，得天独厚，年少相逢，未曾珍惜错失；有人，跌跌撞撞，终其一生，至死不可得。我曾凭着一腔热血，莽撞，视死如归。却发现你是我藏在发霉枕头下，日复一日的春秋大梦。在春日深夜被泪打湿的枕头，在夏日阳光下拿出暴晒，试图驱散那些阴霾。在秋日落叶中望着那些斑驳泪渍。却在冬日里，枕着那些遗憾，做了一个美梦。温柔，浪漫至死的我们，拼命找，却遍体鳞伤，但一个侧身，找到真正的归途。真正的爱浮现地那一刻，我们原谅了那些过往，又生出无限的勇气，为彼此而重新生长。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
